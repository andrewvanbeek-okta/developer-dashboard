{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maxpollard/developer-dashboard/src/views/Developer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/src/views/Developer.vue","mtime":1591904566883},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  client_name: \"Developer\",\n  data: () => ({\n    show1: false,\n    dialog: false,\n    new_client_name: \"\",\n    policy_url: \"\",\n    terms_url: \"\",\n    userField: false,\n    user: \"\",\n    headers: [\n      {\n        text: 'Oauth Clients',\n        align: 'start',\n        sortable: false,\n        value: 'client_name',\n      },\n      { text: 'client_id', value: 'client_id' },\n      { text: 'Actions', value: 'action', sortable: false },\n    ],\n    clients: [],\n    editedIndex: -1,\n    viewedItem: {\n      client_name: '',\n      client_id: 0,\n      client_secret: 0,\n    },\n    defaultItem: {\n      client_name: '',\n      client_id: 0,\n    },\n  }),\n\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'New Oauth App' : 'View Oauth Client'\n    },\n  },\n\n  watch: {\n    dialog (val) {\n      val || this.close()\n    },\n  },\n\n  created () {\n    this.initialize()\n  },\n\n  methods: {\n    async initialize () {\n      var user = await this.$auth.getUser()\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      }\n      this.user = user.preferred_username\n\n\n      const baseURI = \"http://localhost:8000/developer-apps?user=\"+ user.preferred_username;\n      this.$http.get(baseURI, {\n        headers: {\n          'Authorization': `${accessToken}`\n        }\n      }).then((result) => {\n        this.clients = result.data.map(function(client) {\n          client[\"client_secret\"] = client.client_uri.split(\"sec=\")[1]\n          return client\n        })\n        //map to make prettier\n      })\n    },\n    async rotateSecret(item) {\n      var accessToken = await this.$auth.getAccessToken();\n\n      this.$http.post(\"http://localhost:8000/newSecret\", {\n        headers: {\n          'Authorization': `${accessToken}`\n        },\n        client: item\n      }).then((result) => {\n        component.close()\n        component.initialize()\n      })\n\n    },\n    viewItem (item) {\n      this.editedIndex = this.clients.indexOf(item)\n      this.viewedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    createUserGrant (item) {\n      this.editedIndex = this.clients.indexOf(item)\n      this.viewedItem = Object.assign({}, item)\n      this.userField = true\n      this.dialog = true\n    },\n    async deleteItem (item) {\n      var component = this\n      var user = await this.$auth.getUser()\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http.delete(\"http://localhost:8000/oauthClient\", {\n        headers: {\n          'Authorization': `${accessToken}`\n        },\n        data: { \n          client: item \n        } \n      }).then((result) => {\n        component.initialize()\n      })\n    },\n    close () {\n      this.dialog = false\n      this.userField = false\n      setTimeout(() => {\n        this.viewedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async logout () {\n     await this.$auth.logout()\n     await this.$auth.isAuthenticated()\n\n     // Navigate back to home\n     window.location.reload()\n   },\n    async save () {\n      var component = this\n      if(component.userField && component.new_client_name) {\n        component.savePkce()\n      } else {\n        var user = await this.$auth.getUser()\n        var accessToken = await this.$auth.getAccessToken()\n        this.$http.post(\"http://localhost:8000/developer-app\", {\n          headers: {\n              'Authorization': `${accessToken}`\n          },\n          user: user\n        }).then((result) => {\n          component.close()\n          component.initialize()\n        })\n      }\n    },\n      async savePkce() {\n      var component = this\n      var name = component.new_client_name\n      var user = await this.$auth.getUser()\n      var tos = component.terms_url\n      var policy = component.policy_url\n      var accessToken = await this.$auth.getAccessToken()\n      this.$http.post(\"http://localhost:8000/developer-pkce-app\", {\n        headers: {\n            'Authorization': `${accessToken}`\n        },\n        user: user,\n        name: name,\n        tos: tos,\n        policy: policy\n      }).then((result) => {\n        component.userField = false\n        component.close()\n        component.initialize()\n      })\n    },\n  },\n}\n",{"version":3,"sources":["Developer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Developer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-data-table\n  :headers=\"headers\"\n  :items=\"clients\"\n  sort-by=\"client_id\"\n  class=\"elevation-1\"\n  >\n  <template v-slot:top>\n    <v-toolbar flat color=\"white\">\n      <v-toolbar-title>Developer Dashboard</v-toolbar-title>\n      <v-divider\n      class=\"mx-4\"\n      inset\n      vertical\n      ></v-divider>\n      <v-spacer></v-spacer>\n      <v-toolbar-title>Welcome, <span v-model=\"user\">{{user}}</span></v-toolbar-title>\n      <v-divider\n      class=\"mx-4\"\n      inset\n      vertical\n      ></v-divider>\n      <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"save\">New Service Oauth App</v-btn>\n      <v-divider\n      class=\"mx-4\"\n      inset\n      vertical\n      ></v-divider>\n       <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"createUserGrant\">New User Grant Oauth App</v-btn>\n         <v-divider\n      class=\"mx-4\"\n      inset\n      vertical\n      ></v-divider>\n      <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"logout\">Logout</v-btn>\n      <v-dialog v-model=\"dialog\" max-width=\"800px\">\n        <v-card>\n          <v-card-title>\n            <span class=\"headline\">{{ formTitle }}</span>\n          </v-card-title>\n\n          <v-card-text>\n            <v-container>\n              <v-row v-if=\"userField\">\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"new_client_name\" label=\"client client_name\"></v-text-field>\n                </v-col>\n                 <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"logo_url\" label=\"url for logo\"></v-text-field>\n                </v-col>\n                 <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"terms_url\" label=\"url for terms\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"policy_url\" label=\"url for policy\"></v-text-field>\n                </v-col>\n              </v-row>\n              <v-row v-else>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"viewedItem.client_name\" label=\"client client_name\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"viewedItem.client_id\" label=\"client_id\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field\n                  label=\"client_secret\"\n                  v-model=\"viewedItem.client_secret\"\n                  :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                  :type=\"show1 ? 'text' : 'password'\"\n                  name=\"input-10-1\"\n                  counter\n                  @click:append=\"show1 = !show1\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-text>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" text @click=\"close\">Close</v-btn>\n            <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-toolbar>\n  </template>\n  <template v-slot:item.action=\"{ item }\">\n    <v-icon\n    small\n    class=\"mr-2\"\n    @click=\"viewItem(item)\"\n    >\n    mdi-eye\n  </v-icon>\n  <v-icon\n  small\n  @click=\"deleteItem(item)\"\n  >\n  mdi-delete\n</v-icon>\n</template>\n<template v-slot:no-data>\n  <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>\n</template>\n</v-data-table>\n</template>\n\n\n\n\n<script>\nexport default {\n  client_name: \"Developer\",\n  data: () => ({\n    show1: false,\n    dialog: false,\n    new_client_name: \"\",\n    policy_url: \"\",\n    terms_url: \"\",\n    userField: false,\n    user: \"\",\n    headers: [\n      {\n        text: 'Oauth Clients',\n        align: 'start',\n        sortable: false,\n        value: 'client_name',\n      },\n      { text: 'client_id', value: 'client_id' },\n      { text: 'Actions', value: 'action', sortable: false },\n    ],\n    clients: [],\n    editedIndex: -1,\n    viewedItem: {\n      client_name: '',\n      client_id: 0,\n      client_secret: 0,\n    },\n    defaultItem: {\n      client_name: '',\n      client_id: 0,\n    },\n  }),\n\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'New Oauth App' : 'View Oauth Client'\n    },\n  },\n\n  watch: {\n    dialog (val) {\n      val || this.close()\n    },\n  },\n\n  created () {\n    this.initialize()\n  },\n\n  methods: {\n    async initialize () {\n      var user = await this.$auth.getUser()\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      }\n      this.user = user.preferred_username\n\n\n      const baseURI = \"http://localhost:8000/developer-apps?user=\"+ user.preferred_username;\n      this.$http.get(baseURI, {\n        headers: {\n          'Authorization': `${accessToken}`\n        }\n      }).then((result) => {\n        this.clients = result.data.map(function(client) {\n          client[\"client_secret\"] = client.client_uri.split(\"sec=\")[1]\n          return client\n        })\n        //map to make prettier\n      })\n    },\n    async rotateSecret(item) {\n      var accessToken = await this.$auth.getAccessToken();\n\n      this.$http.post(\"http://localhost:8000/newSecret\", {\n        headers: {\n          'Authorization': `${accessToken}`\n        },\n        client: item\n      }).then((result) => {\n        component.close()\n        component.initialize()\n      })\n\n    },\n    viewItem (item) {\n      this.editedIndex = this.clients.indexOf(item)\n      this.viewedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    createUserGrant (item) {\n      this.editedIndex = this.clients.indexOf(item)\n      this.viewedItem = Object.assign({}, item)\n      this.userField = true\n      this.dialog = true\n    },\n    async deleteItem (item) {\n      var component = this\n      var user = await this.$auth.getUser()\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http.delete(\"http://localhost:8000/oauthClient\", {\n        headers: {\n          'Authorization': `${accessToken}`\n        },\n        data: { \n          client: item \n        } \n      }).then((result) => {\n        component.initialize()\n      })\n    },\n    close () {\n      this.dialog = false\n      this.userField = false\n      setTimeout(() => {\n        this.viewedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async logout () {\n     await this.$auth.logout()\n     await this.$auth.isAuthenticated()\n\n     // Navigate back to home\n     window.location.reload()\n   },\n    async save () {\n      var component = this\n      if(component.userField && component.new_client_name) {\n        component.savePkce()\n      } else {\n        var user = await this.$auth.getUser()\n        var accessToken = await this.$auth.getAccessToken()\n        this.$http.post(\"http://localhost:8000/developer-app\", {\n          headers: {\n              'Authorization': `${accessToken}`\n          },\n          user: user\n        }).then((result) => {\n          component.close()\n          component.initialize()\n        })\n      }\n    },\n      async savePkce() {\n      var component = this\n      var name = component.new_client_name\n      var user = await this.$auth.getUser()\n      var tos = component.terms_url\n      var policy = component.policy_url\n      var accessToken = await this.$auth.getAccessToken()\n      this.$http.post(\"http://localhost:8000/developer-pkce-app\", {\n        headers: {\n            'Authorization': `${accessToken}`\n        },\n        user: user,\n        name: name,\n        tos: tos,\n        policy: policy\n      }).then((result) => {\n        component.userField = false\n        component.close()\n        component.initialize()\n      })\n    },\n  },\n}\n</script>\n"]}]}