{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewvanbeek/opa-dev-dash/src/views/Developer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/src/views/Developer.vue","mtime":1593185592566},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify-loader/lib/loader.js","mtime":1592873617526},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js","mtime":1592873617424}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  client_name: \"Developer\",\n  data: () => ({\n    show1: false,\n    dialog: false,\n    authenticated: false,\n    new_client_name: \"\",\n    creatingApp: false,\n    policy_url: \"\",\n    terms_url: \"\",\n    okta_issuer: \"\",\n    userField: false,\n    baseEncode: \"\",\n    user_scopes: \"openid email profile\",\n    items: [\n      {\n        consent: \"IMPLICIT\",\n        default: false,\n        description: null,\n        id: \"scpjeez3czmycNAvE0h7\",\n        metadataPublish: \"NO_CLIENTS\",\n        name: \"Admin\",\n        system: false\n      }\n    ],\n    client_creds_scopes: \"\",\n    user: \"\",\n    headers: [\n      {\n        text: \"Oauth Clients\",\n        align: \"start\",\n        sortable: false,\n        value: \"client_name\"\n      },\n      {\n        text: \"client_id\",\n        value: \"client_id\"\n      },\n      {\n        text: \"Actions\",\n        value: \"action\",\n        sortable: false\n      }\n    ],\n    clients: [],\n    editedIndex: -1,\n    viewedItem: {\n      client_name: \"\",\n      client_id: 0,\n      client_secret: 0\n    },\n    defaultItem: {\n      client_name: \"\",\n      client_id: 0\n    }\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Oauth App\" : \"View Oauth Client\";\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    }\n  },\n\n  created() {\n    this.initialize();\n    console.log(process.env.VUE_APP_OKTA_ISSUER);\n    this.okta_issuer = process.env.VUE_APP_OKTA_ISSUER;\n    this.isAuthenticated();\n  },\n\n  methods: {\n    async initialize() {\n      var component = this;\n      var user = await this.$auth.getUser();\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      };\n      this.user = user.preferred_username;\n\n      const baseURI =\n        \"http://localhost:8000/developer-apps?user=\" + user.preferred_username;\n      this.$http\n        .get(baseURI, {\n          headers: {\n            Authorization: `${accessToken}`\n          }\n        })\n        .then(result => {\n          this.clients = result.data.map(function(client) {\n            client[\"client_secret\"] = client.client_uri.split(\"sec=\")[1];\n            return client;\n          });\n          //map to make prettier\n        });\n    },\n    async rotateSecret(item) {\n      var accessToken = await this.$auth.getAccessToken();\n\n      this.$http\n        .post(\"http://localhost:8000/newSecret\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          client: item\n        })\n        .then(result => {\n          component.close();\n          component.initialize();\n        });\n    },\n    async addScope(item) {\n      if (!this.user_scopes.includes(item)) {\n        this.user_scopes = this.user_scopes + \" \" + item;\n      }\n      if (!this.client_creds_scopes.includes(item)) {\n        this.client_creds_scopes = this.client_creds_scopes + \" \" + item;\n      }\n    },\n    async removeScope(item) {\n      if (this.user_scopes.includes(\" \" + item)) {\n        this.user_scopes = this.user_scopes.replace(\" \" + item, \"\");\n      }\n\n      if (this.client_creds_scopes.includes(\" \" + item)) {\n        this.client_creds_scopes = this.client_creds_scopes.replace(\n          \" \" + item,\n          \"\"\n        );\n      }\n    },\n    async getScopes(item) {\n      var component = this;\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      };\n      const baseURI = \"http://localhost:8000/scopes\";\n      this.$http\n        .get(baseURI, {\n          headers: {\n            Authorization: `${accessToken}`\n          }\n        })\n        .then(result => {\n          console.log(result);\n          component.items = result.data;\n        });\n    },\n    viewItem(item) {\n      this.user_scopes = \"openid email profile\";\n      this.editedIndex = this.clients.indexOf(item);\n      this.viewedItem = Object.assign({}, item);\n      this.baseEncode = btoa(\n        this.viewedItem.client_id + \":\" + this.viewedItem.client_secret\n      );\n      this.getScopes(this.viewedItem);\n      this.dialog = true;\n    },\n    createUserGrant(item) {\n      this.creatingApp = true\n      this.editedIndex = this.clients.indexOf(item);\n      this.viewedItem = Object.assign({}, item);\n      this.userField = true;\n      this.dialog = true;\n    },\n    async deleteItem(item) {\n      var component = this;\n      var user = await this.$auth.getUser();\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http\n        .delete(\"http://localhost:8000/oauthClient\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          data: {\n            client: item\n          }\n        })\n        .then(result => {\n          component.initialize();\n        });\n    },\n    close() {\n      this.dialog = false;\n      this.userField = false;\n      this.creatingApp = false;\n      setTimeout(() => {\n        this.viewedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n    async isAuthenticated() {\n      this.authenticated = await this.$auth.isAuthenticated();\n    },\n    async logout() {\n      await this.$auth.logout();\n      await this.$auth.isAuthenticated();\n\n      // Navigate back to home\n      window.location.reload();\n    },\n    async save() {\n      var component = this;\n      if (component.userField && component.new_client_name) {\n        component.savePkce();\n      } else {\n        var user = await this.$auth.getUser();\n        var accessToken = await this.$auth.getAccessToken();\n        this.$http\n          .post(\"http://localhost:8000/developer-app\", {\n            headers: {\n              Authorization: `${accessToken}`\n            },\n            user: user\n          })\n          .then(result => {\n            component.close();\n            component.initialize();\n          });\n      }\n    },\n    async savePkce() {\n      var component = this;\n      var name = component.new_client_name;\n      var user = await this.$auth.getUser();\n      var tos = component.terms_url;\n      var policy = component.policy_url;\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http\n        .post(\"http://localhost:8000/developer-pkce-app\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          user: user,\n          name: name,\n          tos: tos,\n          policy: policy\n        })\n        .then(result => {\n          component.userField = false;\n          component.close();\n          component.initialize();\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Developer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Developer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-data-table :headers=\"headers\" :items=\"clients\" sort-by=\"client_id\" class=\"elevation-1\">\n    <template v-slot:top>\n      <v-toolbar flat color=\"white\">\n        <v-toolbar-title>Developer Dashboard</v-toolbar-title>\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n        <v-spacer></v-spacer>\n        <v-toolbar-title>\n          Welcome,\n          <span v-model=\"user\">{{user}}</span>\n        </v-toolbar-title>\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n        <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"save\">New Service Oauth App</v-btn>\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n        <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"createUserGrant\">New User Grant Oauth App</v-btn>\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n        <v-btn v-if=\"authenticated\" color=\"primary\" dark class=\"mb-2\" @click=\"logout\">Logout</v-btn>\n        <button\n          v-else\n          v-on:click=\"$auth.loginRedirect\"\n          color=\"primary\"\n          dark\n          class=\"mb-2\"\n          id=\"login-button\"\n        >Login</button>\n        <v-dialog v-model=\"dialog\" max-width=\"800px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">{{ formTitle }}</span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row v-if=\"userField\">\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"new_client_name\" label=\"client client_name\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"logo_url\" label=\"url for logo\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"terms_url\" label=\"url for terms\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"policy_url\" label=\"url for policy\"></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row v-else>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"viewedItem.client_name\" label=\"client client_name\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"viewedItem.client_id\" label=\"client_id\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      label=\"client_secret\"\n                      v-model=\"viewedItem.client_secret\"\n                      :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                      :type=\"show1 ? 'text' : 'password'\"\n                      name=\"input-10-1\"\n                      counter\n                      @click:append=\"show1 = !show1\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n            <v-expansion-panel>\n              <v-card v-if=\"!creatingApp\" max-width=\"800\" max-height=\"200\" class=\"mx-auto scroll\">\n                <v-toolbar color=\"primary\" dark>\n                  <v-toolbar-title>Available Scopes</v-toolbar-title>\n                  <v-spacer></v-spacer>\n                </v-toolbar>\n                <v-list>\n                  <v-list-item v-for=\"item in items\" :key=\"item.title\" @click>\n                    <v-list-item-content>\n                      <v-list-item-title>Scope Name: {{item.name}}</v-list-item-title>\n                    </v-list-item-content>\n                    <v-list-item-content>\n                      <v-list-item-title>description: {{item.description}}</v-list-item-title>\n                    </v-list-item-content>\n                    <v-list-item-content>\n                      <v-list-item-title>Consent: {{item.consent}}</v-list-item-title>\n                    </v-list-item-content>\n                    <v-list-item-content>\n                      <v-list-item-title>Openid Scope: {{item.system}}</v-list-item-title>\n                    </v-list-item-content>\n                    <v-list-item-icon>\n                      <v-icon\n                        color=\"primary\"\n                        @click=\"addScope(item.name)\"\n                        v-if=\"!user_scopes.includes(item.name)\"\n                      >mdi-plus</v-icon>\n                      <v-icon\n                        color=\"primary\"\n                        @click=\"removeScope(item.name)\"\n                        v-else-if=\"user_scopes.includes(item.name)\"\n                      >mdi-minus</v-icon>\n                    </v-list-item-icon>\n                  </v-list-item>\n                </v-list>\n              </v-card>\n            </v-expansion-panel>\n            <v-card v-if=\"!viewedItem.client_secret && !creatingApp\">\n              <br />\n              <div class=\"d-block pa-2 black white--text\">\n                <h3>Run command below</h3>\n                npm i dev-dash-cli-user-login -g && dev-login --OKTA_ORG_URL={{okta_issuer}} --OKTA_CLIENT_ID={{viewedItem.client_id}} --OKTA_REDIRECT_PORT=4000 --OKTA_SCOPES=\"{{user_scopes}}\"\n              </div>\n              <br />\n            </v-card>\n            <v-card v-else-if=\"creatingApp\">\n              <div class=\"d-block pa-2 black white--text\">\n              to use this grant make sure you have the okta federated broker mode turned on!\n              If you don't find this app and assign user groups in Okta.\n              </div>\n            </v-card>\n            <v-card v-else>\n              <br />\n              <div class=\"d-block pa-2 black white--text\">\n                <h3>Run command below</h3>\n                curl --location --request POST '{{okta_issuer}}/v1/token' \\\n                <br />\n                --header 'Authorization: Basic {{baseEncode}}' \\\n                <br />--header 'Content-Type: application/x-www-form-urlencoded' \\\n                <br />--data-urlencode 'grant_type=client_credentials' \\\n                <br />\n                --data-urlencode 'scope={{client_creds_scopes}}'\n              </div>\n              <br />\n            </v-card>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\">Close</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-toolbar>\n    </template>\n    <template v-slot:item.action=\"{ item }\">\n      <v-icon small class=\"mr-2\" @click=\"viewItem(item)\">mdi-eye</v-icon>\n      <v-icon small @click=\"deleteItem(item)\">mdi-delete</v-icon>\n    </template>\n    <template v-slot:no-data>\n      <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nexport default {\n  client_name: \"Developer\",\n  data: () => ({\n    show1: false,\n    dialog: false,\n    authenticated: false,\n    new_client_name: \"\",\n    creatingApp: false,\n    policy_url: \"\",\n    terms_url: \"\",\n    okta_issuer: \"\",\n    userField: false,\n    baseEncode: \"\",\n    user_scopes: \"openid email profile\",\n    items: [\n      {\n        consent: \"IMPLICIT\",\n        default: false,\n        description: null,\n        id: \"scpjeez3czmycNAvE0h7\",\n        metadataPublish: \"NO_CLIENTS\",\n        name: \"Admin\",\n        system: false\n      }\n    ],\n    client_creds_scopes: \"\",\n    user: \"\",\n    headers: [\n      {\n        text: \"Oauth Clients\",\n        align: \"start\",\n        sortable: false,\n        value: \"client_name\"\n      },\n      {\n        text: \"client_id\",\n        value: \"client_id\"\n      },\n      {\n        text: \"Actions\",\n        value: \"action\",\n        sortable: false\n      }\n    ],\n    clients: [],\n    editedIndex: -1,\n    viewedItem: {\n      client_name: \"\",\n      client_id: 0,\n      client_secret: 0\n    },\n    defaultItem: {\n      client_name: \"\",\n      client_id: 0\n    }\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Oauth App\" : \"View Oauth Client\";\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    }\n  },\n\n  created() {\n    this.initialize();\n    console.log(process.env.VUE_APP_OKTA_ISSUER);\n    this.okta_issuer = process.env.VUE_APP_OKTA_ISSUER;\n    this.isAuthenticated();\n  },\n\n  methods: {\n    async initialize() {\n      var component = this;\n      var user = await this.$auth.getUser();\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      };\n      this.user = user.preferred_username;\n\n      const baseURI =\n        \"http://localhost:8000/developer-apps?user=\" + user.preferred_username;\n      this.$http\n        .get(baseURI, {\n          headers: {\n            Authorization: `${accessToken}`\n          }\n        })\n        .then(result => {\n          this.clients = result.data.map(function(client) {\n            client[\"client_secret\"] = client.client_uri.split(\"sec=\")[1];\n            return client;\n          });\n          //map to make prettier\n        });\n    },\n    async rotateSecret(item) {\n      var accessToken = await this.$auth.getAccessToken();\n\n      this.$http\n        .post(\"http://localhost:8000/newSecret\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          client: item\n        })\n        .then(result => {\n          component.close();\n          component.initialize();\n        });\n    },\n    async addScope(item) {\n      if (!this.user_scopes.includes(item)) {\n        this.user_scopes = this.user_scopes + \" \" + item;\n      }\n      if (!this.client_creds_scopes.includes(item)) {\n        this.client_creds_scopes = this.client_creds_scopes + \" \" + item;\n      }\n    },\n    async removeScope(item) {\n      if (this.user_scopes.includes(\" \" + item)) {\n        this.user_scopes = this.user_scopes.replace(\" \" + item, \"\");\n      }\n\n      if (this.client_creds_scopes.includes(\" \" + item)) {\n        this.client_creds_scopes = this.client_creds_scopes.replace(\n          \" \" + item,\n          \"\"\n        );\n      }\n    },\n    async getScopes(item) {\n      var component = this;\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      };\n      const baseURI = \"http://localhost:8000/scopes\";\n      this.$http\n        .get(baseURI, {\n          headers: {\n            Authorization: `${accessToken}`\n          }\n        })\n        .then(result => {\n          console.log(result);\n          component.items = result.data;\n        });\n    },\n    viewItem(item) {\n      this.user_scopes = \"openid email profile\";\n      this.editedIndex = this.clients.indexOf(item);\n      this.viewedItem = Object.assign({}, item);\n      this.baseEncode = btoa(\n        this.viewedItem.client_id + \":\" + this.viewedItem.client_secret\n      );\n      this.getScopes(this.viewedItem);\n      this.dialog = true;\n    },\n    createUserGrant(item) {\n      this.creatingApp = true\n      this.editedIndex = this.clients.indexOf(item);\n      this.viewedItem = Object.assign({}, item);\n      this.userField = true;\n      this.dialog = true;\n    },\n    async deleteItem(item) {\n      var component = this;\n      var user = await this.$auth.getUser();\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http\n        .delete(\"http://localhost:8000/oauthClient\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          data: {\n            client: item\n          }\n        })\n        .then(result => {\n          component.initialize();\n        });\n    },\n    close() {\n      this.dialog = false;\n      this.userField = false;\n      this.creatingApp = false;\n      setTimeout(() => {\n        this.viewedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n    async isAuthenticated() {\n      this.authenticated = await this.$auth.isAuthenticated();\n    },\n    async logout() {\n      await this.$auth.logout();\n      await this.$auth.isAuthenticated();\n\n      // Navigate back to home\n      window.location.reload();\n    },\n    async save() {\n      var component = this;\n      if (component.userField && component.new_client_name) {\n        component.savePkce();\n      } else {\n        var user = await this.$auth.getUser();\n        var accessToken = await this.$auth.getAccessToken();\n        this.$http\n          .post(\"http://localhost:8000/developer-app\", {\n            headers: {\n              Authorization: `${accessToken}`\n            },\n            user: user\n          })\n          .then(result => {\n            component.close();\n            component.initialize();\n          });\n      }\n    },\n    async savePkce() {\n      var component = this;\n      var name = component.new_client_name;\n      var user = await this.$auth.getUser();\n      var tos = component.terms_url;\n      var policy = component.policy_url;\n      var accessToken = await this.$auth.getAccessToken();\n      this.$http\n        .post(\"http://localhost:8000/developer-pkce-app\", {\n          headers: {\n            Authorization: `${accessToken}`\n          },\n          user: user,\n          name: name,\n          tos: tos,\n          policy: policy\n        })\n        .then(result => {\n          component.userField = false;\n          component.close();\n          component.initialize();\n        });\n    }\n  }\n};\n</script>\n\n<style>\n.scroll {\n  overflow-y: auto;\n}\n</style>\n"]}]}