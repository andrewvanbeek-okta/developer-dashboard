{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maxpollard/developer-dashboard/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/src/views/Login.vue","mtime":1587835399746},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport OktaSignIn from '@okta/okta-signin-widget'\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css'\n\nimport sampleConfig from '../.config.js'\n\nexport default {\n  name: 'Login',\n  mounted: function () {\n    this.$nextTick(function () {\n      this.widget = new OktaSignIn({\n        /**\n         * Note: when using the Sign-In Widget for an OIDC flow, it still\n         * needs to be configured with the base URL for your Okta Org. Here\n         * we derive it from the given issuer for convenience.\n         */\n        baseUrl: sampleConfig.oidc.issuer.split('/oauth2')[0],\n        clientId: sampleConfig.oidc.clientId,\n        redirectUri: sampleConfig.oidc.redirectUri,\n        logo: require('@/assets/logo.png'),\n        i18n: {\n          en: {\n            'primaryauth.title': 'Sign in to Vue & Company'\n          }\n        },\n        authParams: {\n          pkce: true,\n          issuer: sampleConfig.oidc.issuer,\n          display: 'page',\n          scopes: sampleConfig.oidc.scopes\n        }\n      })\n\n      this.widget.renderEl(\n        { el: '#okta-signin-container' },\n        () => {\n          /**\n           * In this flow, the success handler will not be called because we redirect\n           * to the Okta org for the authentication workflow.\n           */\n        },\n        (err) => {\n          throw err\n        }\n      )\n    })\n  },\n  destroyed () {\n    // Remove the widget from the DOM on path change\n    this.widget.remove()\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["/*!\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n<template>\n  <div class=\"login\">\n    <div id=\"okta-signin-container\"></div>\n  </div>\n</template>\n\n<script>\nimport OktaSignIn from '@okta/okta-signin-widget'\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css'\n\nimport sampleConfig from '../.config.js'\n\nexport default {\n  name: 'Login',\n  mounted: function () {\n    this.$nextTick(function () {\n      this.widget = new OktaSignIn({\n        /**\n         * Note: when using the Sign-In Widget for an OIDC flow, it still\n         * needs to be configured with the base URL for your Okta Org. Here\n         * we derive it from the given issuer for convenience.\n         */\n        baseUrl: sampleConfig.oidc.issuer.split('/oauth2')[0],\n        clientId: sampleConfig.oidc.clientId,\n        redirectUri: sampleConfig.oidc.redirectUri,\n        logo: require('@/assets/logo.png'),\n        i18n: {\n          en: {\n            'primaryauth.title': 'Sign in to Vue & Company'\n          }\n        },\n        authParams: {\n          pkce: true,\n          issuer: sampleConfig.oidc.issuer,\n          display: 'page',\n          scopes: sampleConfig.oidc.scopes\n        }\n      })\n\n      this.widget.renderEl(\n        { el: '#okta-signin-container' },\n        () => {\n          /**\n           * In this flow, the success handler will not be called because we redirect\n           * to the Okta org for the authentication workflow.\n           */\n        },\n        (err) => {\n          throw err\n        }\n      )\n    })\n  },\n  destroyed () {\n    // Remove the widget from the DOM on path change\n    this.widget.remove()\n  }\n}\n</script>"]}]}