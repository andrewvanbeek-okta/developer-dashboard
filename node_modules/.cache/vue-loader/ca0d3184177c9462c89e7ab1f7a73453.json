{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewvanbeek/opa-dev-dash/src/views/Opa.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/src/views/Opa.vue","mtime":1592890817800},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/css-loader/index.js","mtime":1592873612496},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592873617425},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/postcss-loader/src/index.js","mtime":1592873615483},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify-loader/lib/loader.js","mtime":1592873617526},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js","mtime":1592873617424}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.scroll {\n  overflow-y: auto;\n}\n",{"version":3,"sources":["Opa.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA","file":"Opa.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"d-block pa-2 black white--text\">\n      <h3>Run command below</h3>\n      <p v-for=\"fragment in regoFragements\">{{fragment}}<br></p>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  client_name: \"Developer\",\n  data: () => ({\n    opaText: \"\",\n    regoFragements: [],\n    show1: false,\n    dialog: false,\n    new_client_name: \"\",\n    policy_url: \"\",\n    terms_url: \"\",\n    okta_issuer: \"\",\n    userField: false,\n    baseEncode: \"\",\n    user_scopes: \"openid email profile\",\n    items: [{\n      consent: \"IMPLICIT\",\n      default: false,\n      description: null,\n      id: \"scpjeez3czmycNAvE0h7\",\n      metadataPublish: \"NO_CLIENTS\",\n      name: \"Admin\",\n      system: false\n    }],\n    client_creds_scopes: \"\",\n    user: \"\",\n    headers: [{\n      text: 'Oauth Clients',\n      align: 'start',\n      sortable: false,\n      value: 'client_name',\n    },\n    {\n      text: 'client_id',\n      value: 'client_id'\n    },\n    {\n      text: 'Actions',\n      value: 'action',\n      sortable: false\n    },\n  ],\n  clients: [],\n  editedIndex: -1,\n  viewedItem: {\n    client_name: '',\n    client_id: 0,\n    client_secret: 0,\n  },\n  defaultItem: {\n    client_name: '',\n    client_id: 0,\n  },\n}),\n\ncomputed: {\n  formTitle() {\n    return this.editedIndex === -1 ? 'New Oauth App' : 'View Oauth Client'\n  },\n},\n\nwatch: {\n  dialog(val) {\n    val || this.close()\n  },\n},\n\ncreated() {\n  this.initialize()\n  this.sendToOpa()\n  console.log(process.env.VUE_APP_OKTA_ISSUER)\n  this.okta_issuer = process.env.VUE_APP_OKTA_ISSUER\n},\n\nmethods: {\n  async initialize() {\n    var component = this\n    var user = await this.$auth.getUser()\n    var accessToken = await this.$auth.getAccessToken();\n    const accessTokenobj = {\n      accessToken\n    }\n    this.user = user.preferred_username\n    const baseURI = \"http://localhost:8000/opa\"\n    var opa = await this.$http.get(baseURI)\n    this.regoFragements = opa.data.rego.split(\"\\n\")\n  },\n  async rotateSecret(item) {\n    var accessToken = await this.$auth.getAccessToken();\n\n    this.$http.post(\"http://localhost:8000/newSecret\", {\n      headers: {\n        'Authorization': `${accessToken}`\n      },\n      client: item\n    }).then((result) => {\n      component.close()\n      component.initialize()\n    })\n\n  },\n  async sendToOpa() {\n    let data = new FormData()\n    data.set('file', \"http://localhost:8080/test.rego\")\n    var opa = await this.$http.post('http://localhost:8181/v1/policies', data)\n    console.log(opa)\n  },\n  async addScope(item) {\n    if (!this.user_scopes.includes(item)) {\n      this.user_scopes = this.user_scopes + \" \" + item\n    }\n    if (!this.client_creds_scopes.includes(item)) {\n      this.client_creds_scopes = this.client_creds_scopes + \" \" + item\n    }\n  },\n  async removeScope(item) {\n    if (this.user_scopes.includes(\" \" + item)) {\n      this.user_scopes = this.user_scopes.replace(\" \" + item, '')\n    }\n\n    if(this.client_creds_scopes.includes(\" \" + item)) {\n      this.client_creds_scopes = this.client_creds_scopes.replace(\" \" + item, '')\n    }\n  },\n  async getScopes(item) {\n    var component = this\n    var accessToken = await this.$auth.getAccessToken();\n    const accessTokenobj = {\n      accessToken\n    }\n    const baseURI = \"http://localhost:8000/scopes\"\n    this.$http.get(baseURI, {\n      headers: {\n        'Authorization': `${accessToken}`\n      }\n    }).then((result) => {\n      console.log(result)\n      component.items = result.data\n    })\n  },\n  viewItem(item) {\n    this.user_scopes = \"openid email profile\"\n    this.editedIndex = this.clients.indexOf(item)\n    this.viewedItem = Object.assign({}, item)\n    this.baseEncode = btoa(this.viewedItem.client_id + \":\" + this.viewedItem.client_secret)\n    this.getScopes(this.viewedItem)\n    this.dialog = true\n  },\n  createUserGrant(item) {\n    this.editedIndex = this.clients.indexOf(item)\n    this.viewedItem = Object.assign({}, item)\n    this.userField = true\n    this.dialog = true\n  },\n  async deleteItem(item) {\n    var component = this\n    var user = await this.$auth.getUser()\n    var accessToken = await this.$auth.getAccessToken();\n    this.$http.delete(\"http://localhost:8000/oauthClient\", {\n      headers: {\n        'Authorization': `${accessToken}`\n      },\n      data: {\n        client: item\n      }\n    }).then((result) => {\n      component.initialize()\n    })\n  },\n  close() {\n    this.dialog = false\n    this.userField = false\n    setTimeout(() => {\n      this.viewedItem = Object.assign({}, this.defaultItem)\n      this.editedIndex = -1\n    }, 300)\n  },\n  async logout() {\n    await this.$auth.logout()\n    await this.$auth.isAuthenticated()\n\n    // Navigate back to home\n    window.location.reload()\n  },\n  async save() {\n    var component = this\n    if (component.userField && component.new_client_name) {\n      component.savePkce()\n    } else {\n      var user = await this.$auth.getUser()\n      var accessToken = await this.$auth.getAccessToken()\n      this.$http.post(\"http://localhost:8000/developer-app\", {\n        headers: {\n          'Authorization': `${accessToken}`\n        },\n        user: user\n      }).then((result) => {\n        component.close()\n        component.initialize()\n      })\n    }\n  },\n  async savePkce() {\n    var component = this\n    var name = component.new_client_name\n    var user = await this.$auth.getUser()\n    var tos = component.terms_url\n    var policy = component.policy_url\n    var accessToken = await this.$auth.getAccessToken()\n    this.$http.post(\"http://localhost:8000/developer-pkce-app\", {\n      headers: {\n        'Authorization': `${accessToken}`\n      },\n      user: user,\n      name: name,\n      tos: tos,\n      policy: policy\n    }).then((result) => {\n      component.userField = false\n      component.close()\n      component.initialize()\n    })\n  },\n},\n}\n</script>\n\n<style>\n.scroll {\n  overflow-y: auto;\n}\n</style>\n"]}]}