{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/mixins/delayable/index.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/mixins/delayable/index.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\n\nexport default Vue.extend().extend({\n  name: 'delayable',\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      openTimeout: undefined,\n      closeTimeout: undefined\n    };\n  },\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay: function clearDelay() {\n      clearTimeout(this.openTimeout);\n      clearTimeout(this.closeTimeout);\n    },\n\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay: function runDelay(type, cb) {\n      var _this = this;\n\n      this.clearDelay();\n      var delay = parseInt(this[\"\".concat(type, \"Delay\")], 10);\n      this[\"\".concat(type, \"Timeout\")] = setTimeout(cb || function () {\n        _this.isActive = {\n          open: true,\n          close: false\n        }[type];\n      }, delay);\n    }\n  }\n});",{"version":3,"sources":["../../../src/mixins/delayable/index.ts"],"names":[],"mappings":";AAAA,OAAA,GAAA,MAAA,KAAA;AAEA;;;;;;;;AAOA,eAAe,GAAG,CAAH,MAAA,GAAA,MAAA,CAAkD;AAC/D,EAAA,IAAI,EAD2D,WAAA;AAG/D,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,CAAA,MAAA,EADG,MACH,CADG;AAET,MAAA,OAAO,EAAE;AAFA,KADN;AAKL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,CAAA,MAAA,EADI,MACJ,CADI;AAEV,MAAA,OAAO,EAAE;AAFC;AALP,GAHwD;AAc/D,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,WAAW,EADA,SAAA;AAEX,MAAA,YAAY,EAAE;AAFH,KAAP;AAAA,GAdyD;AAmB/D,EAAA,OAAO,EAAE;AACP;;;AAGA,IAAA,UAJO,wBAIG;AACR,MAAA,YAAY,CAAC,KAAb,WAAY,CAAZ;AACA,MAAA,YAAY,CAAC,KAAb,YAAY,CAAZ;AANK,KAAA;;AAQP;;;AAGA,IAAA,QAXO,oBAWC,IAXD,EAWC,EAXD,EAW0C;AAAA;;AAC/C,WAAA,UAAA;AAEA,UAAM,KAAK,GAAG,QAAQ,CAAE,eAAF,IAAE,WAAF,EAAtB,EAAsB,CAAtB;AAEE,qBAAA,IAAA,gBAAiC,UAAU,CAAC,EAAE,IAAK,YAAK;AACxD,QAAA,KAAA,CAAA,QAAA,GAAgB;AAAE,UAAA,IAAI,EAAN,IAAA;AAAc,UAAA,KAAK,EAAE;AAArB,UAAhB,IAAgB,CAAhB;AAD2C,OAAA,EAA3C,KAA2C,CAA3C;AAGH;AAnBM;AAnBsD,CAAlD,CAAf","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n"],"sourceRoot":""}]}