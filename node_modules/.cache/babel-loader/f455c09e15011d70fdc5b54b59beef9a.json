{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/directives/touch/index.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/directives/touch/index.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { keys } from \"../../util/helpers\";\n\nvar handleGesture = function handleGesture(wrapper) {\n  var touchstartX = wrapper.touchstartX,\n      touchendX = wrapper.touchendX,\n      touchstartY = wrapper.touchstartY,\n      touchendY = wrapper.touchendY;\n  var dirRatio = 0.5;\n  var minDistance = 16;\n  wrapper.offsetX = touchendX - touchstartX;\n  wrapper.offsetY = touchendY - touchstartY;\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);\n    wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);\n    wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);\n  }\n};\n\nfunction _touchstart(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchstartX = touch.clientX;\n  wrapper.touchstartY = touch.clientY;\n  wrapper.start && wrapper.start(Object.assign(event, wrapper));\n}\n\nfunction _touchend(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchendX = touch.clientX;\n  wrapper.touchendY = touch.clientY;\n  wrapper.end && wrapper.end(Object.assign(event, wrapper));\n  handleGesture(wrapper);\n}\n\nfunction _touchmove(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchmoveX = touch.clientX;\n  wrapper.touchmoveY = touch.clientY;\n  wrapper.move && wrapper.move(Object.assign(event, wrapper));\n}\n\nfunction createHandlers(value) {\n  var wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end\n  };\n  return {\n    touchstart: function touchstart(e) {\n      return _touchstart(e, wrapper);\n    },\n    touchend: function touchend(e) {\n      return _touchend(e, wrapper);\n    },\n    touchmove: function touchmove(e) {\n      return _touchmove(e, wrapper);\n    }\n  };\n}\n\nfunction inserted(el, binding, vnode) {\n  var value = binding.value;\n  var target = value.parent ? el.parentElement : el;\n  var options = value.options || {\n    passive: true\n  }; // Needed to pass unit tests\n\n  if (!target) return;\n  var handlers = createHandlers(binding.value);\n  target._touchHandlers = Object(target._touchHandlers);\n  target._touchHandlers[vnode.context._uid] = handlers;\n  keys(handlers).forEach(function (eventName) {\n    target.addEventListener(eventName, handlers[eventName], options);\n  });\n}\n\nfunction unbind(el, binding, vnode) {\n  var target = binding.value.parent ? el.parentElement : el;\n  if (!target || !target._touchHandlers) return;\n  var handlers = target._touchHandlers[vnode.context._uid];\n  keys(handlers).forEach(function (eventName) {\n    target.removeEventListener(eventName, handlers[eventName]);\n  });\n  delete target._touchHandlers[vnode.context._uid];\n}\n\nexport var Touch = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Touch;",{"version":3,"sources":["../../../src/directives/touch/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n"],"sourceRoot":""}]}