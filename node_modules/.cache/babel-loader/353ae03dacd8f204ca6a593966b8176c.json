{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/loadable/index.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/loadable/index.js","mtime":1592873617844},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\nimport VProgressLinear from \"../../components/VProgressLinear\";\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'loadable',\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2\n    }\n  },\n  methods: {\n    genProgress: function genProgress() {\n      if (this.loading === false) return null;\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true\n        }\n      });\n    }\n  }\n});",{"version":3,"sources":["../../../src/mixins/loadable/index.ts"],"names":[],"mappings":";AAAA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,eAAA;AAMA;;;;;;;;;;AASA;;AACA,eAAe,GAAG,CAAH,MAAA,GAAA,MAAA,CAA+B;AAC5C,EAAA,IAAI,EADwC,UAAA;AAG5C,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,CAAA,OAAA,EADC,MACD,CADC;AAEP,MAAA,OAAO,EAAE;AAFF,KADJ;AAKL,IAAA,YAAY,EAAE;AACZ,MAAA,IAAI,EAAE,CAAA,MAAA,EADM,MACN,CADM;AAEZ,MAAA,OAAO,EAAE;AAFG;AALT,GAHqC;AAc5C,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACI;AACT,UAAI,KAAA,OAAA,KAAJ,KAAA,EAA4B,OAAA,IAAA;AAE5B,aAAO,KAAA,MAAA,CAAA,QAAA,IAAwB,KAAA,cAAA,CAAA,eAAA,EAAqC;AAClE,QAAA,KAAK,EAAE;AACL,UAAA,QAAQ,EADH,IAAA;AAEL,UAAA,KAAK,EAAG,KAAA,OAAA,KAAA,IAAA,IAAyB,KAAA,OAAA,KAA1B,EAAC,GACH,KAAA,KAAA,IADE,SAAC,GAEJ,KAJC,OAAA;AAKL,UAAA,MAAM,EAAE,KALH,YAAA;AAML,UAAA,aAAa,EAAE;AANV;AAD2D,OAArC,CAA/B;AAUD;AAdM;AAdmC,CAA/B,CAAf","sourcesContent":["import Vue, { VNode } from 'vue'\nimport VProgressLinear from '../../components/VProgressLinear'\n\ninterface colorable extends Vue {\n  color?: string\n}\n\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n/* @vue/component */\nexport default Vue.extend<colorable>().extend({\n  name: 'loadable',\n\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2,\n    },\n  },\n\n  methods: {\n    genProgress (): VNode | VNode[] | null {\n      if (this.loading === false) return null\n\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: (this.loading === true || this.loading === '')\n            ? (this.color || 'primary')\n            : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true,\n        },\n      })\n    },\n  },\n})\n"],"sourceRoot":""}]}