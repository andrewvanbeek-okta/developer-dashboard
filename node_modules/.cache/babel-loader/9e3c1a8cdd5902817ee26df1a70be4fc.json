{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/returnable/index.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/returnable/index.js","mtime":1592873617849},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'returnable',\n  props: {\n    returnValue: null\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      originalValue: null\n    };\n  },\n  watch: {\n    isActive: function isActive(val) {\n      if (val) {\n        this.originalValue = this.returnValue;\n      } else {\n        this.$emit('update:return-value', this.originalValue);\n      }\n    }\n  },\n  methods: {\n    save: function save(value) {\n      var _this = this;\n\n      this.originalValue = value;\n      setTimeout(function () {\n        _this.isActive = false;\n      });\n    }\n  }\n});",{"version":3,"sources":["../../../src/mixins/returnable/index.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAEA;;AACA,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,YAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,WAAW,EAAE;AADR,GAHiB;AAOxB,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,QAAQ,EADG,KAAA;AAEX,MAAA,aAAa,EAAE;AAFJ,KAAP;AAAA,GAPkB;AAYxB,EAAA,KAAK,EAAE;AACL,IAAA,QADK,oBACG,GADH,EACQ;AACX,UAAA,GAAA,EAAS;AACP,aAAA,aAAA,GAAqB,KAArB,WAAA;AADF,OAAA,MAEO;AACL,aAAA,KAAA,CAAA,qBAAA,EAAkC,KAAlC,aAAA;AACD;AACF;AAPI,GAZiB;AAsBxB,EAAA,OAAO,EAAE;AACP,IAAA,IADO,gBACH,KADG,EACS;AAAA;;AACd,WAAA,aAAA,GAAA,KAAA;AACA,MAAA,UAAU,CAAC,YAAK;AACd,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AADF,OAAU,CAAV;AAGD;AANM;AAtBe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n"],"sourceRoot":""}]}