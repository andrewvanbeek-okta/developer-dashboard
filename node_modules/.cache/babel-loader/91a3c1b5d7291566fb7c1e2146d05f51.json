{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/services/goto/util.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/services/goto/util.js","mtime":1592873617856},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n// Return target's cumulative offset from the top\nexport function getOffset(target) {\n  if (typeof target === 'number') {\n    return target;\n  }\n\n  var el = $(target);\n\n  if (!el) {\n    throw typeof target === 'string' ? new Error(\"Target element \\\"\".concat(target, \"\\\" not found.\")) : new TypeError(\"Target must be a Number/Selector/HTMLElement/VueComponent, received \".concat(type(target), \" instead.\"));\n  }\n\n  var totalOffset = 0;\n\n  while (el) {\n    totalOffset += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return totalOffset;\n}\nexport function getContainer(container) {\n  var el = $(container);\n  if (el) return el;\n  throw typeof container === 'string' ? new Error(\"Container element \\\"\".concat(container, \"\\\" not found.\")) : new TypeError(\"Container must be a Selector/HTMLElement/VueComponent, received \".concat(type(container), \" instead.\"));\n}\n\nfunction type(el) {\n  return el == null ? el : el.constructor.name;\n}\n\nfunction $(el) {\n  if (typeof el === 'string') {\n    return document.querySelector(el);\n  } else if (el && el._isVue) {\n    return el.$el;\n  } else if (el instanceof HTMLElement) {\n    return el;\n  } else {\n    return null;\n  }\n}",{"version":3,"sources":["../../../src/services/goto/util.ts"],"names":[],"mappings":";AAEA;AACA,OAAM,SAAA,SAAA,CAAA,MAAA,EAAgC;AACpC,MAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC9B,WAAA,MAAA;AACD;;AAED,MAAI,EAAE,GAAG,CAAC,CAAV,MAAU,CAAV;;AACA,MAAI,CAAJ,EAAA,EAAS;AACP,UAAM,OAAA,MAAA,KAAA,QAAA,GACF,IAAA,KAAA,4BADE,MACF,mBADE,GAEF,IAAA,SAAA,+EAAqF,IAAI,CAF7F,MAE6F,CAAzF,eAFJ;AAGD;;AAED,MAAI,WAAW,GAAf,CAAA;;AACA,SAAA,EAAA,EAAW;AACT,IAAA,WAAW,IAAI,EAAE,CAAjB,SAAA;AACA,IAAA,EAAE,GAAG,EAAE,CAAP,YAAA;AACD;;AAED,SAAA,WAAA;AACD;AAED,OAAM,SAAA,YAAA,CAAA,SAAA,EAAsC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAZ,SAAY,CAAZ;AAEA,MAAA,EAAA,EAAQ,OAAA,EAAA;AAER,QAAM,OAAA,SAAA,KAAA,QAAA,GACF,IAAA,KAAA,+BADE,SACF,mBADE,GAEF,IAAA,SAAA,2EAAiF,IAAI,CAFzF,SAEyF,CAArF,eAFJ;AAGD;;AAED,SAAA,IAAA,CAAA,EAAA,EAAsB;AACpB,SAAO,EAAE,IAAF,IAAA,GAAA,EAAA,GAAkB,EAAE,CAAF,WAAA,CAAzB,IAAA;AACD;;AAED,SAAA,CAAA,CAAA,EAAA,EAAmB;AACjB,MAAI,OAAA,EAAA,KAAJ,QAAA,EAA4B;AAC1B,WAAO,QAAQ,CAAR,aAAA,CAAP,EAAO,CAAP;AADF,GAAA,MAEO,IAAI,EAAE,IAAI,EAAE,CAAZ,MAAA,EAAqB;AAC1B,WAAQ,EAAU,CAAlB,GAAA;AADK,GAAA,MAEA,IAAI,EAAE,YAAN,WAAA,EAA+B;AACpC,WAAA,EAAA;AADK,GAAA,MAEA;AACL,WAAA,IAAA;AACD;AACF","sourcesContent":["import Vue from 'vue'\n\n// Return target's cumulative offset from the top\nexport function getOffset (target: any): number {\n  if (typeof target === 'number') {\n    return target\n  }\n\n  let el = $(target)\n  if (!el) {\n    throw typeof target === 'string'\n      ? new Error(`Target element \"${target}\" not found.`)\n      : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`)\n  }\n\n  let totalOffset = 0\n  while (el) {\n    totalOffset += el.offsetTop\n    el = el.offsetParent as HTMLElement\n  }\n\n  return totalOffset\n}\n\nexport function getContainer (container: any): HTMLElement {\n  const el = $(container)\n\n  if (el) return el\n\n  throw typeof container === 'string'\n    ? new Error(`Container element \"${container}\" not found.`)\n    : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`)\n}\n\nfunction type (el: any) {\n  return el == null ? el : el.constructor.name\n}\n\nfunction $ (el: any): HTMLElement | null {\n  if (typeof el === 'string') {\n    return document.querySelector<HTMLElement>(el)\n  } else if (el && el._isVue) {\n    return (el as Vue).$el as HTMLElement\n  } else if (el instanceof HTMLElement) {\n    return el\n  } else {\n    return null\n  }\n}\n"],"sourceRoot":""}]}