{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VColorPicker/util/index.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VColorPicker/util/index.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectWithoutProperties from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Utilities\nimport { HSVAtoRGBA, HSVAtoHex, RGBAtoHSVA, HexToHSVA, HSVAtoHSLA, RGBAtoHex, HSLAtoHSVA, parseHex } from \"../../../util/colorUtils\";\nexport function fromHSVA(hsva) {\n  hsva = _objectSpread({}, hsva);\n  var hexa = HSVAtoHex(hsva);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHSLA(hsla) {\n  var hsva = HSLAtoHSVA(hsla);\n  var hexa = HSVAtoHex(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromRGBA(rgba) {\n  var hsva = RGBAtoHSVA(rgba);\n  var hexa = RGBAtoHex(rgba);\n  var hsla = HSVAtoHSLA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHexa(hexa) {\n  var hsva = HexToHSVA(hexa);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHex(hex) {\n  return fromHexa(parseHex(hex));\n}\n\nfunction has(obj, key) {\n  return key.every(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\n\nexport function parseColor(color, oldColor) {\n  if (!color) return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000');\n    var hex = parseHex(color);\n    if (oldColor && hex === oldColor.hexa) return oldColor;else return fromHexa(hex);\n  }\n\n  if (_typeof(color) === 'object') {\n    if (color.hasOwnProperty('alpha')) return color;\n    var a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1;\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor;else return fromRGBA(_objectSpread({}, color, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor;else return fromHSLA(_objectSpread({}, color, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor;else return fromHSVA(_objectSpread({}, color, {\n        a: a\n      }));\n    }\n  }\n\n  return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n}\n\nfunction stripAlpha(color, stripAlpha) {\n  if (stripAlpha) {\n    var a = color.a,\n        rest = _objectWithoutProperties(color, [\"a\"]);\n\n    return rest;\n  }\n\n  return color;\n}\n\nexport function extractColor(color, input) {\n  if (input == null) return color;\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa;\n  }\n\n  if (_typeof(input) === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, !input.a);else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, !input.a);else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, !input.a);\n  }\n\n  return color;\n}\nexport function hasAlpha(color) {\n  if (!color) return false;\n\n  if (typeof color === 'string') {\n    return color.length > 7;\n  }\n\n  if (_typeof(color) === 'object') {\n    return has(color, ['a']) || has(color, ['alpha']);\n  }\n\n  return false;\n}",{"version":3,"sources":["../../../../src/components/VColorPicker/util/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Utilities\nimport {\n  HSVA,\n  HSVAtoRGBA,\n  HSVAtoHex,\n  RGBA,\n  Hex,\n  RGBAtoHSVA,\n  HexToHSVA,\n  HSLA,\n  HSVAtoHSLA,\n  RGBAtoHex,\n  HSLAtoHSVA,\n  parseHex,\n  Hexa,\n} from '../../../util/colorUtils'\n\nexport interface VColorPickerColor {\n  alpha: number\n  hex: Hex\n  hexa: Hexa\n  hsla: HSLA\n  hsva: HSVA\n  hue: number\n  rgba: RGBA\n}\n\nexport function fromHSVA (hsva: HSVA): VColorPickerColor {\n  hsva = { ...hsva }\n  const hexa = HSVAtoHex(hsva)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHSLA (hsla: HSLA): VColorPickerColor {\n  const hsva = HSLAtoHSVA(hsla)\n  const hexa = HSVAtoHex(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromRGBA (rgba: RGBA): VColorPickerColor {\n  const hsva = RGBAtoHSVA(rgba)\n  const hexa = RGBAtoHex(rgba)\n  const hsla = HSVAtoHSLA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHexa (hexa: Hexa): VColorPickerColor {\n  const hsva = HexToHSVA(hexa)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHex (hex: Hex): VColorPickerColor {\n  return fromHexa(parseHex(hex))\n}\n\nfunction has (obj: object, key: string[]) {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\nexport function parseColor (color: any, oldColor: VColorPickerColor | null) {\n  if (!color) return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000')\n\n    const hex = parseHex(color)\n\n    if (oldColor && hex === oldColor.hexa) return oldColor\n    else return fromHexa(hex)\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color\n\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor\n      else return fromRGBA({ ...color, a })\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor\n      else return fromHSLA({ ...color, a })\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor\n      else return fromHSVA({ ...color, a })\n    }\n  }\n\n  return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n}\n\nfunction stripAlpha (color: any, stripAlpha: boolean) {\n  if (stripAlpha) {\n    const { a, ...rest } = color\n\n    return rest\n  }\n\n  return color\n}\n\nexport function extractColor (color: VColorPickerColor, input: any) {\n  if (input == null) return color\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa\n  }\n\n  if (typeof input === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, !input.a)\n    else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, !input.a)\n    else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, !input.a)\n  }\n\n  return color\n}\n\nexport function hasAlpha (color: any) {\n  if (!color) return false\n\n  if (typeof color === 'string') {\n    return color.length > 7\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a']) || has(color, ['alpha'])\n  }\n\n  return false\n}\n"],"sourceRoot":""}]}