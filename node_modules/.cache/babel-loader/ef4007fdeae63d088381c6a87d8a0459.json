{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/toggleable/index.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/toggleable/index.js","mtime":1592873617852},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Vue from 'vue';\nexport function factory() {\n  var _watch;\n\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';\n  return Vue.extend({\n    name: 'toggleable',\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: _defineProperty({}, prop, {\n      required: false\n    }),\n    data: function data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {\n      this.isActive = !!val;\n    }), _defineProperty(_watch, \"isActive\", function isActive(val) {\n      !!val !== this[prop] && this.$emit(event, val);\n    }), _watch)\n  });\n}\n/* eslint-disable-next-line no-redeclare */\n\nvar Toggleable = factory();\nexport default Toggleable;",{"version":3,"sources":["../../../src/mixins/toggleable/index.ts"],"names":[],"mappings":";AAAA,OAAA,GAAA,MAAA,KAAA;AAMA,OAAM,SAAA,OAAA,GAAkD;AAAA;;AAAA,MAA/B,IAA+B,uEAAlD,OAAkD;AAAA,MAAf,KAAe,uEAAlD,OAAkD;AACtD,SAAO,GAAG,CAAH,MAAA,CAAW;AAChB,IAAA,IAAI,EADY,YAAA;AAGhB,IAAA,KAAK,EAAE;AAAE,MAAA,IAAF,EAAE,IAAF;AAAQ,MAAA,KAAA,EAAA;AAAR,KAHS;AAKhB,IAAA,KAAK,sBACH,IADG,EACK;AAAE,MAAA,QAAQ,EAAE;AAAZ,KADL,CALW;AAShB,IAAA,IATgB,kBASZ;AACF,aAAO;AACL,QAAA,QAAQ,EAAE,CAAC,CAAC,KAAA,IAAA;AADP,OAAP;AAVc,KAAA;AAehB,IAAA,KAAK,wCACH,IADG,YACH,GADG,EACQ;AACT,WAAA,QAAA,GAAgB,CAAC,CAAjB,GAAA;AAFG,KAAF,yDAIK,GAJL,EAIU;AACX,OAAC,CAAD,GAAA,KAAU,KAAV,IAAU,CAAV,IAAwB,KAAA,KAAA,CAAA,KAAA,EAAxB,GAAwB,CAAxB;AACD,KANE;AAfW,GAAX,CAAP;AAwBD;AAED;;AACA,IAAM,UAAU,GAAG,OAAnB,EAAA;AAEA,eAAA,UAAA","sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}]}