{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VBadge/VBadge.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VBadge/VBadge.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectWithoutProperties from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VBadge/VBadge.sass\"; // Components\n\nimport VIcon from \"../VIcon/VIcon\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport Themeable from \"../../mixins/themeable\";\nimport Toggleable from \"../../mixins/toggleable\";\nimport Transitionable from \"../../mixins/transitionable\";\nimport { factory as PositionableFactory } from \"../../mixins/positionable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nimport { convertToUnit, getSlot } from \"../../util/helpers\";\nexport default mixins(Colorable, PositionableFactory(['left', 'bottom']), Themeable, Toggleable, Transitionable).extend({\n  name: 'v-badge',\n  props: {\n    avatar: Boolean,\n    bordered: Boolean,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    content: {\n      required: false\n    },\n    dot: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge'\n    },\n    icon: String,\n    inline: Boolean,\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    overlap: Boolean,\n    tile: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-rotate-transition'\n    },\n    value: {\n      default: true\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-badge--avatar': this.avatar,\n        'v-badge--bordered': this.bordered,\n        'v-badge--bottom': this.bottom,\n        'v-badge--dot': this.dot,\n        'v-badge--icon': this.icon != null,\n        'v-badge--inline': this.inline,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap,\n        'v-badge--tile': this.tile\n      }, this.themeClasses);\n    },\n    computedBottom: function computedBottom() {\n      return this.bottom ? 'auto' : this.computedYOffset;\n    },\n    computedLeft: function computedLeft() {\n      if (this.isRtl) {\n        return this.left ? this.computedXOffset : 'auto';\n      }\n\n      return this.left ? 'auto' : this.computedXOffset;\n    },\n    computedRight: function computedRight() {\n      if (this.isRtl) {\n        return this.left ? 'auto' : this.computedXOffset;\n      }\n\n      return !this.left ? 'auto' : this.computedXOffset;\n    },\n    computedTop: function computedTop() {\n      return this.bottom ? this.computedYOffset : 'auto';\n    },\n    computedXOffset: function computedXOffset() {\n      return this.calcPosition(this.offsetX);\n    },\n    computedYOffset: function computedYOffset() {\n      return this.calcPosition(this.offsetY);\n    },\n    isRtl: function isRtl() {\n      return this.$vuetify.rtl;\n    },\n    // Default fallback if offsetX\n    // or offsetY are undefined.\n    offset: function offset() {\n      if (this.overlap) return this.dot ? 8 : 12;\n      return this.dot ? 2 : 4;\n    },\n    styles: function styles() {\n      if (this.inline) return {};\n      return {\n        bottom: this.computedBottom,\n        left: this.computedLeft,\n        right: this.computedRight,\n        top: this.computedTop\n      };\n    }\n  },\n  methods: {\n    calcPosition: function calcPosition(offset) {\n      return \"calc(100% - \".concat(convertToUnit(offset || this.offset), \")\");\n    },\n    genBadge: function genBadge() {\n      var lang = this.$vuetify.lang;\n      var label = this.$attrs['aria-label'] || lang.t(this.label);\n      var data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-badge__badge',\n        style: this.styles,\n        attrs: {\n          'aria-atomic': this.$attrs['aria-atomic'] || 'true',\n          'aria-label': label,\n          'aria-live': this.$attrs['aria-live'] || 'polite',\n          title: this.$attrs.title,\n          role: this.$attrs.role || 'status'\n        },\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      });\n      var badge = this.$createElement('span', data, [this.genBadgeContent()]);\n      if (!this.transition) return badge;\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          mode: this.mode\n        }\n      }, [badge]);\n    },\n    genBadgeContent: function genBadgeContent() {\n      // Dot prop shows no content\n      if (this.dot) return undefined;\n      var slot = getSlot(this, 'badge');\n      if (slot) return slot;\n      if (this.content) return String(this.content);\n      if (this.icon) return this.$createElement(VIcon, this.icon);\n      return undefined;\n    },\n    genBadgeWrapper: function genBadgeWrapper() {\n      return this.$createElement('span', {\n        staticClass: 'v-badge__wrapper'\n      }, [this.genBadge()]);\n    }\n  },\n  render: function render(h) {\n    var badge = [this.genBadgeWrapper()];\n    var children = [getSlot(this)];\n\n    var _this$$attrs = this.$attrs,\n        _x = _this$$attrs['aria-atomic'],\n        _y = _this$$attrs['aria-label'],\n        _z = _this$$attrs['aria-live'],\n        role = _this$$attrs.role,\n        title = _this$$attrs.title,\n        attrs = _objectWithoutProperties(_this$$attrs, [\"aria-atomic\", \"aria-label\", \"aria-live\", \"role\", \"title\"]);\n\n    if (this.inline && this.left) children.unshift(badge);else children.push(badge);\n    return h('span', {\n      staticClass: 'v-badge',\n      attrs: attrs,\n      class: this.classes\n    }, children);\n  }\n});",{"version":3,"sources":["../../../src/components/VBadge/VBadge.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA,oD,CAEA;;AACA,OAAA,KAAA,uB,CAEA;;AACA,OAAA,SAAA;AACA,OAAA,SAAA;AACA,OAAA,UAAA;AACA,OAAA,cAAA;AACA,SAAS,OAAO,IAAhB,mBAAA,oC,CAEA;;AACA,OAAA,MAAA;AACA,SAAA,aAAA,EAAA,OAAA;AAQA,eAAe,MAAM,CAAA,SAAA,EAEnB,mBAAmB,CAAC,CAAA,MAAA,EAFD,QAEC,CAAD,CAFA,EAAA,SAAA,EAAA,UAAA,EAAN,cAAM,CAAN,CAAA,MAAA,CAON;AACP,EAAA,IAAI,EADG,SAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,MAAM,EADD,OAAA;AAEL,IAAA,QAAQ,EAFH,OAAA;AAGL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,MAAA;AAEL,MAAA,OAAO,EAAE;AAFJ,KAHF;AAOL,IAAA,OAAO,EAAE;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAPJ;AAQL,IAAA,GAAG,EARE,OAAA;AASL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,MAAA;AAEL,MAAA,OAAO,EAAE;AAFJ,KATF;AAaL,IAAA,IAAI,EAbC,MAAA;AAcL,IAAA,MAAM,EAdD,OAAA;AAeL,IAAA,OAAO,EAAE,CAAA,MAAA,EAfJ,MAeI,CAfJ;AAgBL,IAAA,OAAO,EAAE,CAAA,MAAA,EAhBJ,MAgBI,CAhBJ;AAiBL,IAAA,OAAO,EAjBF,OAAA;AAkBL,IAAA,IAAI,EAlBC,OAAA;AAmBL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EADM,MAAA;AAEV,MAAA,OAAO,EAAE;AAFC,KAnBP;AAuBL,IAAA,KAAK,EAAE;AAAE,MAAA,OAAO,EAAE;AAAX;AAvBF,GAHA;AA6BP,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL;AACE,2BAAmB,KADd,MAAP;AAEE,6BAAqB,KAFhB,QAAP;AAGE,2BAAmB,KAHd,MAAP;AAIE,wBAAgB,KAJX,GAAP;AAKE,yBAAiB,KAAA,IAAA,IALZ,IAAP;AAME,2BAAmB,KANd,MAAP;AAOE,yBAAiB,KAPZ,IAAP;AAQE,4BAAoB,KARf,OAAP;AASE,yBAAiB,KATZ;AAAP,SAUK,KAAK,YAVV;AAFM,KAAA;AAeR,IAAA,cAfQ,4BAeM;AACZ,aAAO,KAAA,MAAA,GAAA,MAAA,GAAuB,KAA9B,eAAA;AAhBM,KAAA;AAkBR,IAAA,YAlBQ,0BAkBI;AACV,UAAI,KAAJ,KAAA,EAAgB;AACd,eAAO,KAAA,IAAA,GAAY,KAAZ,eAAA,GAAP,MAAA;AACD;;AAED,aAAO,KAAA,IAAA,GAAA,MAAA,GAAqB,KAA5B,eAAA;AAvBM,KAAA;AAyBR,IAAA,aAzBQ,2BAyBK;AACX,UAAI,KAAJ,KAAA,EAAgB;AACd,eAAO,KAAA,IAAA,GAAA,MAAA,GAAqB,KAA5B,eAAA;AACD;;AAED,aAAO,CAAC,KAAD,IAAA,GAAA,MAAA,GAAsB,KAA7B,eAAA;AA9BM,KAAA;AAgCR,IAAA,WAhCQ,yBAgCG;AACT,aAAO,KAAA,MAAA,GAAc,KAAd,eAAA,GAAP,MAAA;AAjCM,KAAA;AAmCR,IAAA,eAnCQ,6BAmCO;AACb,aAAO,KAAA,YAAA,CAAkB,KAAzB,OAAO,CAAP;AApCM,KAAA;AAsCR,IAAA,eAtCQ,6BAsCO;AACb,aAAO,KAAA,YAAA,CAAkB,KAAzB,OAAO,CAAP;AAvCM,KAAA;AAyCR,IAAA,KAzCQ,mBAyCH;AACH,aAAO,KAAA,QAAA,CAAP,GAAA;AA1CM,KAAA;AA4CR;AACA;AACA,IAAA,MA9CQ,oBA8CF;AACJ,UAAI,KAAJ,OAAA,EAAkB,OAAO,KAAA,GAAA,GAAA,CAAA,GAAP,EAAA;AAClB,aAAO,KAAA,GAAA,GAAA,CAAA,GAAP,CAAA;AAhDM,KAAA;AAkDR,IAAA,MAlDQ,oBAkDF;AACJ,UAAI,KAAJ,MAAA,EAAiB,OAAA,EAAA;AAEjB,aAAO;AACL,QAAA,MAAM,EAAE,KADH,cAAA;AAEL,QAAA,IAAI,EAAE,KAFD,YAAA;AAGL,QAAA,KAAK,EAAE,KAHF,aAAA;AAIL,QAAA,GAAG,EAAE,KAAK;AAJL,OAAP;AAMD;AA3DO,GA7BH;AA2FP,EAAA,OAAO,EAAE;AACP,IAAA,YADO,wBACK,MADL,EAC8B;AACnC,mCAAsB,aAAa,CAAC,MAAM,IAAI,KAA9C,MAAmC,CAAnC;AAFK,KAAA;AAIP,IAAA,QAJO,sBAIC;AACN,UAAM,IAAI,GAAG,KAAA,QAAA,CAAb,IAAA;AACA,UAAM,KAAK,GAAG,KAAA,MAAA,CAAA,YAAA,KAA6B,IAAI,CAAJ,CAAA,CAAO,KAAlD,KAA2C,CAA3C;AAEA,UAAM,IAAI,GAAG,KAAA,kBAAA,CAAwB,KAAxB,KAAA,EAAoC;AAC/C,QAAA,WAAW,EADoC,gBAAA;AAE/C,QAAA,KAAK,EAAE,KAFwC,MAAA;AAG/C,QAAA,KAAK,EAAE;AACL,yBAAe,KAAA,MAAA,CAAA,aAAA,KADV,MAAA;AAEL,wBAFK,KAAA;AAGL,uBAAa,KAAA,MAAA,CAAA,WAAA,KAHR,QAAA;AAIL,UAAA,KAAK,EAAE,KAAA,MAAA,CAJF,KAAA;AAKL,UAAA,IAAI,EAAE,KAAA,MAAA,CAAA,IAAA,IAAoB;AALrB,SAHwC;AAU/C,QAAA,UAAU,EAAE,CAAC;AACX,UAAA,IAAI,EADO,MAAA;AAEX,UAAA,KAAK,EAAE,KAAK;AAFD,SAAD;AAVmC,OAApC,CAAb;AAgBA,UAAM,KAAK,GAAG,KAAA,cAAA,CAAA,MAAA,EAAA,IAAA,EAAkC,CAAC,KAAjD,eAAiD,EAAD,CAAlC,CAAd;AAEA,UAAI,CAAC,KAAL,UAAA,EAAsB,OAAA,KAAA;AAEtB,aAAO,KAAA,cAAA,CAAA,YAAA,EAAkC;AACvC,QAAA,KAAK,EAAE;AACL,UAAA,IAAI,EAAE,KADD,UAAA;AAEL,UAAA,MAAM,EAAE,KAFH,MAAA;AAGL,UAAA,IAAI,EAAE,KAAK;AAHN;AADgC,OAAlC,EAMJ,CANH,KAMG,CANI,CAAP;AA5BK,KAAA;AAoCP,IAAA,eApCO,6BAoCQ;AACb;AACA,UAAI,KAAJ,GAAA,EAAc,OAAA,SAAA;AAEd,UAAM,IAAI,GAAG,OAAO,CAAA,IAAA,EAApB,OAAoB,CAApB;AAEA,UAAA,IAAA,EAAU,OAAA,IAAA;AACV,UAAI,KAAJ,OAAA,EAAkB,OAAO,MAAM,CAAC,KAAd,OAAa,CAAb;AAClB,UAAI,KAAJ,IAAA,EAAe,OAAO,KAAA,cAAA,CAAA,KAAA,EAA2B,KAAlC,IAAO,CAAP;AAEf,aAAA,SAAA;AA9CK,KAAA;AAgDP,IAAA,eAhDO,6BAgDQ;AACb,aAAO,KAAA,cAAA,CAAA,MAAA,EAA4B;AACjC,QAAA,WAAW,EAAE;AADoB,OAA5B,EAEJ,CAAC,KAFJ,QAEI,EAAD,CAFI,CAAP;AAGD;AApDM,GA3FF;AAkJP,EAAA,MAlJO,kBAkJD,CAlJC,EAkJE;AACP,QAAM,KAAK,GAAG,CAAC,KAAf,eAAe,EAAD,CAAd;AACA,QAAM,QAAQ,GAAG,CAAC,OAAO,CAAzB,IAAyB,CAAR,CAAjB;;AAFO,uBAUH,KAPJ,MAHO;AAAA,QAGD,EAHC,gBAIL,aAJK;AAAA,QAGD,EAHC,gBAKL,YALK;AAAA,QAGD,EAHC,gBAML,WANK;AAAA,QAGD,IAHC,gBAGD,IAHC;AAAA,QAGD,KAHC,gBAGD,KAHC;AAAA,QASF,KATE;;AAYP,QAAI,KAAA,MAAA,IAAe,KAAnB,IAAA,EAA8B,QAAQ,CAAR,OAAA,CAA9B,KAA8B,EAA9B,KACK,QAAQ,CAAR,IAAA,CAAA,KAAA;AAEL,WAAO,CAAC,CAAA,MAAA,EAAS;AACf,MAAA,WAAW,EADI,SAAA;AAEf,MAAA,KAFe,EAEf,KAFe;AAGf,MAAA,KAAK,EAAE,KAAK;AAHG,KAAT,EAAR,QAAQ,CAAR;AAKD;AAtKM,CAPM,CAAf","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport VIcon from '../VIcon/VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from '../../mixins/toggleable'\nimport Transitionable from '../../mixins/transitionable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport {\n  convertToUnit,\n  getSlot,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Colorable,\n  PositionableFactory(['left', 'bottom']),\n  Themeable,\n  Toggleable,\n  Transitionable,\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n\n  props: {\n    avatar: Boolean,\n    bordered: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    content: { required: false },\n    dot: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    icon: String,\n    inline: Boolean,\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    overlap: Boolean,\n    tile: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-rotate-transition',\n    },\n    value: { default: true },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-badge--avatar': this.avatar,\n        'v-badge--bordered': this.bordered,\n        'v-badge--bottom': this.bottom,\n        'v-badge--dot': this.dot,\n        'v-badge--icon': this.icon != null,\n        'v-badge--inline': this.inline,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap,\n        'v-badge--tile': this.tile,\n        ...this.themeClasses,\n      }\n    },\n    computedBottom (): string {\n      return this.bottom ? 'auto' : this.computedYOffset\n    },\n    computedLeft (): string {\n      if (this.isRtl) {\n        return this.left ? this.computedXOffset : 'auto'\n      }\n\n      return this.left ? 'auto' : this.computedXOffset\n    },\n    computedRight (): string {\n      if (this.isRtl) {\n        return this.left ? 'auto' : this.computedXOffset\n      }\n\n      return !this.left ? 'auto' : this.computedXOffset\n    },\n    computedTop (): string {\n      return this.bottom ? this.computedYOffset : 'auto'\n    },\n    computedXOffset (): string {\n      return this.calcPosition(this.offsetX)\n    },\n    computedYOffset (): string {\n      return this.calcPosition(this.offsetY)\n    },\n    isRtl (): boolean {\n      return this.$vuetify.rtl\n    },\n    // Default fallback if offsetX\n    // or offsetY are undefined.\n    offset (): number {\n      if (this.overlap) return this.dot ? 8 : 12\n      return this.dot ? 2 : 4\n    },\n    styles (): object {\n      if (this.inline) return {}\n\n      return {\n        bottom: this.computedBottom,\n        left: this.computedLeft,\n        right: this.computedRight,\n        top: this.computedTop,\n      }\n    },\n  },\n\n  methods: {\n    calcPosition (offset: string | number): string {\n      return `calc(100% - ${convertToUnit(offset || this.offset)})`\n    },\n    genBadge () {\n      const lang = this.$vuetify.lang\n      const label = this.$attrs['aria-label'] || lang.t(this.label)\n\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-badge__badge',\n        style: this.styles,\n        attrs: {\n          'aria-atomic': this.$attrs['aria-atomic'] || 'true',\n          'aria-label': label,\n          'aria-live': this.$attrs['aria-live'] || 'polite',\n          title: this.$attrs.title,\n          role: this.$attrs.role || 'status',\n        },\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      })\n\n      const badge = this.$createElement('span', data, [this.genBadgeContent()])\n\n      if (!this.transition) return badge\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          mode: this.mode,\n        },\n      }, [badge])\n    },\n    genBadgeContent () {\n      // Dot prop shows no content\n      if (this.dot) return undefined\n\n      const slot = getSlot(this, 'badge')\n\n      if (slot) return slot\n      if (this.content) return String(this.content)\n      if (this.icon) return this.$createElement(VIcon, this.icon)\n\n      return undefined\n    },\n    genBadgeWrapper () {\n      return this.$createElement('span', {\n        staticClass: 'v-badge__wrapper',\n      }, [this.genBadge()])\n    },\n  },\n\n  render (h): VNode {\n    const badge = [this.genBadgeWrapper()]\n    const children = [getSlot(this)]\n    const {\n      'aria-atomic': _x,\n      'aria-label': _y,\n      'aria-live': _z,\n      role,\n      title,\n      ...attrs\n    } = this.$attrs\n\n    if (this.inline && this.left) children.unshift(badge)\n    else children.push(badge)\n\n    return h('span', {\n      staticClass: 'v-badge',\n      attrs,\n      class: this.classes,\n    }, children)\n  },\n})\n"],"sourceRoot":""}]}