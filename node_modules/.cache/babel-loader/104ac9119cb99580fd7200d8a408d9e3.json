{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VImg/VImg.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VImg/VImg.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// Styles\nimport \"../../../src/components/VImg/VImg.sass\"; // Directives\n\nimport intersect from \"../../directives/intersect\"; // Components\n\nimport VResponsive from \"../VResponsive\"; // Utils\n\nimport { consoleError, consoleWarn } from \"../../util/console\";\nvar hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window;\n/* @vue/component */\n\nexport default VResponsive.extend({\n  name: 'v-img',\n  directives: {\n    intersect: intersect\n  },\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: function _default() {\n        return {\n          root: undefined,\n          rootMargin: undefined,\n          threshold: undefined\n        };\n      }\n    },\n    position: {\n      type: String,\n      default: 'center center'\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition'\n    }\n  },\n  data: function data() {\n    return {\n      currentSrc: '',\n      image: null,\n      isLoading: true,\n      calculatedAspectRatio: undefined,\n      naturalWidth: undefined\n    };\n  },\n  computed: {\n    computedAspectRatio: function computedAspectRatio() {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio);\n    },\n    normalisedSrc: function normalisedSrc() {\n      return typeof this.src === 'string' ? {\n        src: this.src,\n        srcset: this.srcset,\n        lazySrc: this.lazySrc,\n        aspect: Number(this.aspectRatio || 0)\n      } : {\n        src: this.src.src,\n        srcset: this.srcset || this.src.srcset,\n        lazySrc: this.lazySrc || this.src.lazySrc,\n        aspect: Number(this.aspectRatio || this.src.aspect)\n      };\n    },\n    __cachedImage: function __cachedImage() {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return [];\n      var backgroundImage = [];\n      var src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc;\n      if (this.gradient) backgroundImage.push(\"linear-gradient(\".concat(this.gradient, \")\"));\n      if (src) backgroundImage.push(\"url(\\\"\".concat(src, \"\\\")\"));\n      var image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position\n        },\n        key: +this.isLoading\n      });\n      /* istanbul ignore if */\n\n      if (!this.transition) return image;\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out'\n        }\n      }, [image]);\n    }\n  },\n  watch: {\n    src: function src() {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true);else this.loadImage();\n    },\n    '$vuetify.breakpoint.width': 'getSrc'\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init(entries, observer, isIntersecting) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (hasIntersect && !isIntersecting && !this.eager) return;\n\n      if (this.normalisedSrc.lazySrc) {\n        var lazyImg = new Image();\n        lazyImg.src = this.normalisedSrc.lazySrc;\n        this.pollForSize(lazyImg, null);\n      }\n      /* istanbul ignore else */\n\n\n      if (this.normalisedSrc.src) this.loadImage();\n    },\n    onLoad: function onLoad() {\n      this.getSrc();\n      this.isLoading = false;\n      this.$emit('load', this.src);\n    },\n    onError: function onError() {\n      consoleError(\"Image load failed\\n\\n\" + \"src: \".concat(this.normalisedSrc.src), this);\n      this.$emit('error', this.src);\n    },\n    getSrc: function getSrc() {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src;\n    },\n    loadImage: function loadImage() {\n      var _this = this;\n\n      var image = new Image();\n      this.image = image;\n\n      image.onload = function () {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch(function (err) {\n            consoleWarn(\"Failed to decode image, trying to render anyway\\n\\n\" + \"src: \".concat(_this.normalisedSrc.src) + (err.message ? \"\\nOriginal error: \".concat(err.message) : ''), _this);\n          }).then(_this.onLoad);\n        } else {\n          _this.onLoad();\n        }\n      };\n\n      image.onerror = this.onError;\n      image.src = this.normalisedSrc.src;\n      this.sizes && (image.sizes = this.sizes);\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset);\n      this.aspectRatio || this.pollForSize(image);\n      this.getSrc();\n    },\n    pollForSize: function pollForSize(img) {\n      var _this2 = this;\n\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var poll = function poll() {\n        var naturalHeight = img.naturalHeight,\n            naturalWidth = img.naturalWidth;\n\n        if (naturalHeight || naturalWidth) {\n          _this2.naturalWidth = naturalWidth;\n          _this2.calculatedAspectRatio = naturalWidth / naturalHeight;\n        } else {\n          timeout != null && setTimeout(poll, timeout);\n        }\n      };\n\n      poll();\n    },\n    genContent: function genContent() {\n      var content = VResponsive.options.methods.genContent.call(this);\n\n      if (this.naturalWidth) {\n        this._b(content.data, 'div', {\n          style: {\n            width: \"\".concat(this.naturalWidth, \"px\")\n          }\n        });\n      }\n\n      return content;\n    },\n    __genPlaceholder: function __genPlaceholder() {\n      if (this.$slots.placeholder) {\n        var placeholder = this.isLoading ? [this.$createElement('div', {\n          staticClass: 'v-image__placeholder'\n        }, this.$slots.placeholder)] : [];\n        if (!this.transition) return placeholder[0];\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition\n          }\n        }, placeholder);\n      }\n    }\n  },\n  render: function render(h) {\n    var node = VResponsive.options.render.call(this, h);\n    node.data.staticClass += ' v-image'; // Only load intersect directive if it\n    // will work in the current browser.\n\n    if (hasIntersect) {\n      node.data.directives = [{\n        name: 'intersect',\n        modifiers: {\n          once: true\n        },\n        value: {\n          handler: this.init,\n          options: this.options\n        }\n      }];\n    }\n\n    node.data.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt\n    };\n    node.children = [this.__cachedSizer, this.__cachedImage, this.__genPlaceholder(), this.genContent()];\n    return h(node.tag, node.data, node.children);\n  }\n});",{"version":3,"sources":["../../../src/components/VImg/VImg.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Utils\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\nconst hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window\n\n/* @vue/component */\nexport default VResponsive.extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    normalisedSrc (): srcObject {\n      return typeof this.src === 'string'\n        ? {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || 0),\n        } : {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n    },\n    onError () {\n      consoleError(\n        `Image load failed\\n\\n` +\n        `src: ${this.normalisedSrc.src}`,\n        this\n      )\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      image.src = this.normalisedSrc.src\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else {\n          timeout != null && setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    node.data!.staticClass += ' v-image'\n\n    // Only load intersect directive if it\n    // will work in the current browser.\n    if (hasIntersect) {\n      node.data!.directives = [{\n        name: 'intersect',\n        modifiers: { once: true },\n        value: {\n          handler: this.init,\n          options: this.options,\n        },\n      }]\n    }\n\n    node.data!.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt,\n    }\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, node.data, node.children)\n  },\n})\n"],"sourceRoot":""}]}