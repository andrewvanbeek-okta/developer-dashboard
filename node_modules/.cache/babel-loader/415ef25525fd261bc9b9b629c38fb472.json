{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/util/dateTimeUtils.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/util/dateTimeUtils.js","mtime":1592873617868},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["function createUTCDate(year) {\n  var month = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var day = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var date;\n\n  if (year < 100 && year >= 0) {\n    date = new Date(Date.UTC(year, month, day));\n\n    if (isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(year);\n    }\n  } else {\n    date = new Date(Date.UTC(year, month, day));\n  }\n\n  return date;\n}\n\nfunction firstWeekOffset(year, firstDayOfWeek, firstDayOfYear) {\n  var firstWeekDayInFirstWeek = 7 + firstDayOfWeek - firstDayOfYear;\n  var firstWeekDayOfYear = (7 + createUTCDate(year, 0, firstWeekDayInFirstWeek).getUTCDay() - firstDayOfWeek) % 7;\n  return -firstWeekDayOfYear + firstWeekDayInFirstWeek - 1;\n}\n\nfunction dayOfYear(year, month, day, firstDayOfWeek) {\n  var dayOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][month];\n\n  if (month > 1 && isLeapYear(year)) {\n    dayOfYear++;\n  }\n\n  return dayOfYear + day;\n}\n\nfunction weeksInYear(year, firstDayOfWeek, firstDayOfYear) {\n  var weekOffset = firstWeekOffset(year, firstDayOfWeek, firstDayOfYear);\n  var weekOffsetNext = firstWeekOffset(year + 1, firstDayOfWeek, firstDayOfYear);\n  var daysInYear = isLeapYear(year) ? 366 : 365;\n  return (daysInYear - weekOffset + weekOffsetNext) / 7;\n}\n\nexport function weekNumber(year, month, day, firstDayOfWeek, localeFirstDayOfYear) {\n  var weekOffset = firstWeekOffset(year, firstDayOfWeek, localeFirstDayOfYear);\n  var week = Math.ceil((dayOfYear(year, month, day, firstDayOfWeek) - weekOffset) / 7);\n\n  if (week < 1) {\n    return week + weeksInYear(year - 1, firstDayOfWeek, localeFirstDayOfYear);\n  } else if (week > weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)) {\n    return week - weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear);\n  } else {\n    return week;\n  }\n}\nexport function isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}",{"version":3,"sources":["../../src/util/dateTimeUtils.ts"],"names":[],"mappings":"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","sourcesContent":["function createUTCDate (year: number, month = 0, day = 1) {\n  let date\n  if (year < 100 && year >= 0) {\n    date = new Date(Date.UTC(year, month, day))\n    if (isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(year)\n    }\n  } else {\n    date = new Date(Date.UTC(year, month, day))\n  }\n\n  return date\n}\n\nfunction firstWeekOffset (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const firstWeekDayInFirstWeek = 7 + firstDayOfWeek - firstDayOfYear\n  const firstWeekDayOfYear = (7 + createUTCDate(year, 0, firstWeekDayInFirstWeek).getUTCDay() - firstDayOfWeek) % 7\n\n  return -firstWeekDayOfYear + firstWeekDayInFirstWeek - 1\n}\n\nfunction dayOfYear (year: number, month: number, day: number, firstDayOfWeek: number) {\n  let dayOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][month]\n  if (month > 1 && isLeapYear(year)) {\n    dayOfYear++\n  }\n\n  return dayOfYear + day\n}\n\nfunction weeksInYear (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, firstDayOfYear)\n  const weekOffsetNext = firstWeekOffset(year + 1, firstDayOfWeek, firstDayOfYear)\n  const daysInYear = isLeapYear(year) ? 366 : 365\n\n  return (daysInYear - weekOffset + weekOffsetNext) / 7\n}\n\nexport function weekNumber (year: number, month: number, day: number, firstDayOfWeek: number, localeFirstDayOfYear: number): number {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, localeFirstDayOfYear)\n  const week = Math.ceil((dayOfYear(year, month, day, firstDayOfWeek) - weekOffset) / 7)\n\n  if (week < 1) {\n    return week + weeksInYear(year - 1, firstDayOfWeek, localeFirstDayOfYear)\n  } else if (week > weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)) {\n    return week - weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)\n  } else {\n    return week\n  }\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n"],"sourceRoot":""}]}