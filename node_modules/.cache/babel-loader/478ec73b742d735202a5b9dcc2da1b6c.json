{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/maxpollard/developer-dashboard/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers: function getDefaultMouseEventHandlers(suffix, getEvent) {\n      var _this$getMouseEventHa;\n\n      return this.getMouseEventHandlers((_this$getMouseEventHa = {}, _defineProperty(_this$getMouseEventHa, 'click' + suffix, {\n        event: 'click'\n      }), _defineProperty(_this$getMouseEventHa, 'contextmenu' + suffix, {\n        event: 'contextmenu',\n        prevent: true,\n        result: false\n      }), _defineProperty(_this$getMouseEventHa, 'mousedown' + suffix, {\n        event: 'mousedown'\n      }), _defineProperty(_this$getMouseEventHa, 'mousemove' + suffix, {\n        event: 'mousemove'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseup' + suffix, {\n        event: 'mouseup'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseenter' + suffix, {\n        event: 'mouseenter'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseleave' + suffix, {\n        event: 'mouseleave'\n      }), _defineProperty(_this$getMouseEventHa, 'touchstart' + suffix, {\n        event: 'touchstart'\n      }), _defineProperty(_this$getMouseEventHa, 'touchmove' + suffix, {\n        event: 'touchmove'\n      }), _defineProperty(_this$getMouseEventHa, 'touchend' + suffix, {\n        event: 'touchend'\n      }), _this$getMouseEventHa), getEvent);\n    },\n    getMouseEventHandlers: function getMouseEventHandlers(events, getEvent) {\n      var _this = this;\n\n      var on = {};\n\n      var _loop = function _loop(event) {\n        var eventOptions = events[event];\n        if (!_this.$listeners[event]) return \"continue\"; // TODO somehow pull in modifiers\n\n        var prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        var key = prefix + eventOptions.event;\n\n        var handler = function handler(e) {\n          var mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            _this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      };\n\n      for (var event in events) {\n        var _ret = _loop(event);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return on;\n    }\n  }\n});",{"version":3,"sources":["../../../../src/components/VCalendar/mixins/mouse.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\nexport type MouseHandler = (e: MouseEvent | TouchEvent) => any\n\nexport type MouseEvents = {\n  [event: string]: {\n    event: string\n    passive?: boolean\n    capture?: boolean\n    once?: boolean\n    stop?: boolean\n    prevent?: boolean\n    button?: number\n    result?: any\n  }\n}\n\nexport type MouseEventsMap = {\n  [event: string]: MouseHandler | MouseHandler[]\n}\n\nexport default Vue.extend({\n  name: 'mouse',\n\n  methods: {\n    getDefaultMouseEventHandlers (suffix: string, getEvent: MouseHandler): MouseEventsMap {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: { event: 'click' },\n        ['contextmenu' + suffix]: { event: 'contextmenu', prevent: true, result: false },\n        ['mousedown' + suffix]: { event: 'mousedown' },\n        ['mousemove' + suffix]: { event: 'mousemove' },\n        ['mouseup' + suffix]: { event: 'mouseup' },\n        ['mouseenter' + suffix]: { event: 'mouseenter' },\n        ['mouseleave' + suffix]: { event: 'mouseleave' },\n        ['touchstart' + suffix]: { event: 'touchstart' },\n        ['touchmove' + suffix]: { event: 'touchmove' },\n        ['touchend' + suffix]: { event: 'touchend' },\n      }, getEvent)\n    },\n    getMouseEventHandlers (events: MouseEvents, getEvent: MouseHandler): MouseEventsMap {\n      const on: MouseEventsMap = {}\n\n      for (const event in events) {\n        const eventOptions = events[event]\n\n        if (!this.$listeners[event]) continue\n\n        // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : ((eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : ''))\n        const key = prefix + eventOptions.event\n\n        const handler: MouseHandler = e => {\n          const mouseEvent: MouseEvent = e as MouseEvent\n          if (eventOptions.button === undefined || (mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button)) {\n            if (eventOptions.prevent) {\n              e.preventDefault()\n            }\n            if (eventOptions.stop) {\n              e.stopPropagation()\n            }\n            this.$emit(event, getEvent(e))\n          }\n\n          return eventOptions.result\n        }\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            (on[key] as MouseHandler[]).push(handler)\n          } else {\n            on[key] = [on[key], handler] as MouseHandler[]\n          }\n        } else {\n          on[key] = handler\n        }\n      }\n\n      return on\n    },\n  },\n})\n"],"sourceRoot":""}]}