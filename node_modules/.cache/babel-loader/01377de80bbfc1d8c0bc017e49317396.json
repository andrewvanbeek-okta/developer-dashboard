{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewvanbeek/opa-dev-dash/src/views/Opa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/src/views/Opa.vue","mtime":1593453010639},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify-loader/lib/loader.js","mtime":1592873617526},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vue-loader/lib/index.js","mtime":1592873617424}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Editor, EditorContent } from \"tiptap\";\nexport default {\n  components: {\n    EditorContent: EditorContent\n  },\n  client_name: \"Developer\",\n  data: function data() {\n    return {\n      opaText: \"\",\n      on: true,\n      useCurrentToken: false,\n      opaMessageTitle: \"\",\n      checkForClaim: false,\n      claimKey: \"\",\n      claimToCheck: \"\",\n      checkForScope: false,\n      scopeToCheck: \"\",\n      checkForGroup: false,\n      groupForCheck: \"\",\n      checkForUser: false,\n      userForCheck: \"\",\n      opaOff: false,\n      opaResponse: \"\",\n      dialog: false,\n      method: \"GET\",\n      path: \"finance\",\n      access_token: \"\",\n      editor: null,\n      regoFragements: [],\n      user: \"\"\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New Oauth App\" : \"View Oauth Client\";\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    useCurrentToken: function () {\n      var _useCurrentToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newValue) {\n        var useDashToken;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                useDashToken = this.useCurrentTokens;\n\n                if (!newValue) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.$auth.getAccessToken();\n\n              case 4:\n                this.access_token = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                this.access_token = \"\";\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function useCurrentToken(_x) {\n        return _useCurrentToken.apply(this, arguments);\n      }\n\n      return useCurrentToken;\n    }()\n  },\n  created: function created() {\n    this.initialize();\n    console.log(process.env.VUE_APP_OKTA_ISSUER);\n    this.okta_issuer = process.env.VUE_APP_OKTA_ISSUER;\n  },\n  methods: {\n    initialize: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var component, user, accessToken, accessTokenobj, baseURI, opa, rego, niceRego;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                component = this;\n                _context2.next = 3;\n                return this.$auth.getUser();\n\n              case 3:\n                user = _context2.sent;\n                _context2.next = 6;\n                return this.$auth.getAccessToken();\n\n              case 6:\n                accessToken = _context2.sent;\n                accessTokenobj = {\n                  accessToken: accessToken\n                };\n                this.user = user.preferred_username;\n                baseURI = \"http://localhost:8000/opa\";\n                _context2.next = 12;\n                return this.$http.get(baseURI);\n\n              case 12:\n                opa = _context2.sent;\n\n                if (opa.data.name) {\n                  this.opaOff = opa.data.name.code == \"ECONNREFUSED\";\n                  this.opaInfo();\n                }\n\n                this.regoFragements = opa.data.rego.split(\"\\n\");\n                rego = opa.data.rego.split(\"\\n\").join(\"</br>\");\n                niceRego = this.createPrettyString(this.regoFragements);\n                this.editor = new Editor({\n                  content: niceRego\n                });\n                component.saveRego();\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }(),\n    opaInfo: function opaInfo() {\n      if (this.opaOff) {\n        this.opaMessageTitle = \"You do not have Open Policy Agent running.  Run this command in the terminal and refresh the page(prereq is to have docker)\";\n        this.opaResponse = \"docker run -p 8181:8181 openpolicyagent/opa \\\n    run --server --log-level debug\";\n        this.dialog = true;\n      }\n    },\n    saveRego: function () {\n      var _saveRego = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var baseURI, jsonContent, htmlContent, regoToSend, opa;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                baseURI = \"http://localhost:8000/rego\";\n                jsonContent = this.editor.getJSON();\n                htmlContent = this.editor.getHTML();\n                console.log(jsonContent.content);\n                regoToSend = this.createFormattedString(jsonContent.content);\n                console.log(regoToSend);\n                _context3.next = 8;\n                return this.$http.post(baseURI, {\n                  rego: regoToSend\n                });\n\n              case 8:\n                opa = _context3.sent;\n                console.log(opa);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveRego() {\n        return _saveRego.apply(this, arguments);\n      }\n\n      return saveRego;\n    }(),\n    parseJwt: function parseJwt() {\n      var base64Url = this.access_token.split(\".\")[1];\n      var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      var jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(\"\"));\n      this.opaMessageTitle = \"Parsed Access Token\";\n      this.opaResponse = JSON.parse(jsonPayload);\n      this.dialog = true;\n    },\n    easyAuthorization: function () {\n      var _easyAuthorization = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var component, baseURI, opa, rego, niceRego, regoWithSettings;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                component = this;\n                baseURI = \"http://localhost:8000/easyRego\";\n                _context4.next = 4;\n                return this.$http.get(baseURI);\n\n              case 4:\n                opa = _context4.sent;\n                this.regoFragements = opa.data.rego.split(\"\\n\");\n                rego = opa.data.rego.split(\"\\n\").join(\"</br>\");\n                niceRego = this.createPrettyString(this.regoFragements);\n                regoWithSettings = this.easyAuthorizationSettings(niceRego);\n                this.editor.setContent(regoWithSettings);\n                this.saveRego();\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function easyAuthorization() {\n        return _easyAuthorization.apply(this, arguments);\n      }\n\n      return easyAuthorization;\n    }(),\n    easyAuthorizationSettings: function easyAuthorizationSettings(rego) {\n      var regoSettingsString = \"\";\n\n      if (this.checkForClaim) {\n        regoSettingsString += \"<p>\" + \"user_owns_claim\" + \"</p></br>\";\n        rego.replace(\"#claim#\", this.claimToCheck);\n      }\n\n      if (this.checkForScope) {\n        regoSettingsString += \"<p>\" + \"user_owns_scope\" + \"</p></br>\";\n        rego.replace(\"#scope#\", this.scopeToCheck);\n      }\n\n      if (this.checkForGroup) {\n        regoSettingsString += \"<p>\" + \"user_owns_role\" + \"</p></br>\";\n      }\n\n      if (this.checkForUser) {\n        regoSettingsString += \"<p>\" + \"user_owns_username\" + \"</p></br>\";\n      }\n\n      var newRego = rego.replace(\"#placeholder#\", regoSettingsString).replace(\"#username#\", this.userForCheck).replace(\"#role#\", this.groupForCheck).replace(\"#scope#\", this.scopeToCheck).replace(\"#claim#\", this.claimToCheck).replace(\"_replace_claim_key\", this.claimKey);\n      return newRego;\n    },\n    sendToOpa: function () {\n      var _sendToOpa = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var component, baseURI, opa;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                component = this;\n                baseURI = \"http://localhost:8000/opaAuthz\";\n                _context5.next = 4;\n                return this.$http.post(baseURI, {\n                  method: component.method,\n                  path: component.path,\n                  token: component.access_token\n                });\n\n              case 4:\n                opa = _context5.sent;\n                console.log(opa);\n                component.opaMessageTitle = \"Response from Opa!\";\n                component.opaResponse = opa.data;\n                component.dialog = true;\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function sendToOpa() {\n        return _sendToOpa.apply(this, arguments);\n      }\n\n      return sendToOpa;\n    }(),\n    resetRego: function () {\n      var _resetRego = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var baseURI, opa;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                baseURI = \"http://localhost:8000/rego\";\n                _context6.next = 3;\n                return this.$http.delete(baseURI);\n\n              case 3:\n                opa = _context6.sent;\n                this.$router.go();\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function resetRego() {\n        return _resetRego.apply(this, arguments);\n      }\n\n      return resetRego;\n    }(),\n    createPrettyString: function createPrettyString(fragments) {\n      var string = \"\";\n      fragments.forEach(function (item, i) {\n        string += \"<p>\" + item + \"</p><br>\";\n      });\n      return string;\n    },\n    createFormattedString: function createFormattedString(contentObjects) {\n      var string = \"\";\n      contentObjects.forEach(function (item, i) {\n        if (item.content) {\n          string += item.content[0].text + \"\\n\";\n\n          if (item.content[0].text.includes(\"}\")) {\n            string += \"\\n\";\n          }\n        }\n      });\n      return string;\n    },\n    logout: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$auth.logout();\n\n              case 2:\n                _context7.next = 4;\n                return this.$auth.isAuthenticated();\n\n              case 4:\n                // Navigate back to home\n                window.location.reload();\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }\n};",{"version":3,"sources":["Opa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog v-model=\"dialog\" scrollable max-width=\"800px\">\n      <v-card>\n        <v-card-title>{{opaMessageTitle}}</v-card-title>\n        <v-card-text class=\"d-block pa-2 black white--text scroll\">{{opaResponse}}</v-card-text>\n        <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">Close</v-btn>\n      </v-card>\n    </v-dialog>\n    <v-col cols=\"6\">\n      <v-card width=\"1000px\" scrollable=\"true\">\n        <v-card-title>Test Authorization</v-card-title>\n        <v-divider></v-divider>\n        <v-divider></v-divider>\n        <v-form>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\" md=\"4\">\n                <v-text-field v-model=\"method\"></v-text-field>\n              </v-col>\n\n              <v-col cols=\"12\" md=\"4\">\n                <v-text-field v-model=\"path\"></v-text-field>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col cols=\"9\">\n                <v-label>Copy and Paste your Access Token</v-label>   <v-btn color=\"blue darken-1\" text @click=\"parseJwt()\">Show Token Contents</v-btn>\n                <v-textarea\n                  outlined\n                  name=\"input-7-4\"\n                  label=\"Paste a Access Token here\"\n                  rows=\"12\"\n                  v-model=\"access_token\"\n                ></v-textarea>\n              </v-col>\n              <v-col cols=\"3\">\n                <v-label>Use the token from the Dev Dashboard</v-label>\n                <v-switch value v-model=\"useCurrentToken\"></v-switch>\n              </v-col>\n            </v-row>\n          </v-container>\n          <v-row justify=\"center\">\n            <v-btn color=\"primary\" dark class=\"mb-2 send\" @click=\"sendToOpa()\">Send</v-btn>\n          </v-row>\n        </v-form>\n        <div class=\"d-block pa-2 black white--text scroll\">\n          What we are going to send to Open Policy Agent\n          <br />\n          <br />\n          {\n          \"input\":{\n          \"method\": \"{{method}}\",\n          \"path\": \"{{path}}\",\n          \"token\": \"{{access_token}}\"\n          }\n          }\n        </div>\n        <v-divider></v-divider>\n      </v-card>\n    </v-col>\n    <v-col cols=\"6\">\n      <v-card width=\"1000px\" scrollable=\"true\">\n        <v-card-title>\n          Open Policy Agent Status:\n          <span v-if=\"opaOff\">\n            Not Available\n            <v-btn icon @click=\"opaInfo()\">\n              <v-icon>?</v-icon>\n            </v-btn>\n          </span>\n          <span v-else>All systems go</span>\n        </v-card-title>\n        <v-progress-linear v-if=\"opaOff\" color=\"red lighten-2\" buffer-value=\"0\" stream></v-progress-linear>\n        <v-progress-linear color=\"green\" buffer-value=\"0\" value=\"100\" stream v-else></v-progress-linear>\n        <v-divider></v-divider>\n        <v-card-title>Edit Opa Policy</v-card-title>\n        <v-divider></v-divider>\n        <v-card-text>\n          <v-form>\n            <v-container>\n              <v-row>\n                <v-col cols=\"12\" md=\"2\">\n                  <v-label>Check Token for scope below</v-label>\n                  <v-switch v-model=\"checkForScope\" value=\"John\"></v-switch>\n                  <v-text-field placeholder=\"scope value\" v-model=\"scopeToCheck\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" md=\"2\">\n                  <v-label>Check Token for claim below</v-label>\n                  <v-switch v-model=\"checkForClaim\" value></v-switch>\n                   <v-text-field placeholder=\"claim title\" v-model=\"claimKey\"></v-text-field>\n                  <v-text-field placeholder=\"claim value\" v-model=\"claimToCheck\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" md=\"2\">\n                  <v-label>Check Token for role or group name</v-label>\n                  <v-switch v-model=\"checkForGroup\" value=\"John\"></v-switch>\n                  <v-text-field placeholder=\"role value\" v-model=\"groupForCheck\"></v-text-field>\n                </v-col>\n                <v-col cols=\"12\" md=\"2\">\n                  <v-label>Check Token for specific users</v-label>\n                  <v-switch v-model=\"checkForUser\" value=\"John\"></v-switch>\n                  <v-text-field placeholder=\"username value\" v-model=\"userForCheck\"></v-text-field>\n                </v-col>\n              </v-row>\n            </v-container>\n            <v-row justify=\"center\">\n              <v-btn color=\"primary\" dark class=\"mb-2 send\" @click=\"easyAuthorization()\">Apply</v-btn>\n            </v-row>\n          </v-form>\n        </v-card-text>\n         <v-label>Or Directly edit the OPA policy</v-label>\n        <div class=\"d-block pa-2 black white--text scroll\">\n          <!-- <h3>Run command below</h3>\n          <p v-for=\"fragment in regoFragements\">{{fragment}}<br></p>-->\n          <editor-content :editor=\"editor\" />\n        </div>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"saveRego()\">Save</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"resetRego()\">Reset</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport { Editor, EditorContent } from \"tiptap\";\nexport default {\n  components: {\n    EditorContent\n  },\n  client_name: \"Developer\",\n  data: () => ({\n    opaText: \"\",\n    on: true,\n    useCurrentToken: false,\n    opaMessageTitle: \"\",\n    checkForClaim: false,\n    claimKey: \"\",\n    claimToCheck: \"\",\n    checkForScope: false,\n    scopeToCheck: \"\",\n    checkForGroup: false,\n    groupForCheck: \"\",\n    checkForUser: false,\n    userForCheck: \"\",\n    opaOff: false,\n    opaResponse: \"\",\n    dialog: false,\n    method: \"GET\",\n    path: \"finance\",\n    access_token: \"\",\n    editor: null,\n    regoFragements: [],\n    user: \"\"\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Oauth App\" : \"View Oauth Client\";\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    async useCurrentToken(newValue) {\n      var useDashToken = this.useCurrentTokens;\n      if (newValue) {\n        this.access_token = await this.$auth.getAccessToken();\n      } else {\n        this.access_token = \"\";\n      }\n    }\n  },\n\n  created() {\n    this.initialize();\n    console.log(process.env.VUE_APP_OKTA_ISSUER);\n    this.okta_issuer = process.env.VUE_APP_OKTA_ISSUER;\n  },\n\n  methods: {\n    async initialize() {\n      var component = this;\n      var user = await this.$auth.getUser();\n      var accessToken = await this.$auth.getAccessToken();\n      const accessTokenobj = {\n        accessToken\n      };\n      this.user = user.preferred_username;\n      const baseURI = \"http://localhost:8000/opa\";\n      var opa = await this.$http.get(baseURI);\n      if (opa.data.name) {\n        this.opaOff = opa.data.name.code == \"ECONNREFUSED\";\n        this.opaInfo();\n      }\n      this.regoFragements = opa.data.rego.split(\"\\n\");\n      var rego = opa.data.rego.split(\"\\n\").join(\"</br>\");\n      var niceRego = this.createPrettyString(this.regoFragements);\n      this.editor = new Editor({\n        content: niceRego\n      });\n      component.saveRego();\n    },\n    opaInfo() {\n      if (this.opaOff) {\n        this.opaMessageTitle =\n          \"You do not have Open Policy Agent running.  Run this command in the terminal and refresh the page(prereq is to have docker)\";\n        this.opaResponse =\n          \"docker run -p 8181:8181 openpolicyagent/opa \\\n    run --server --log-level debug\";\n        this.dialog = true;\n      }\n    },\n    async saveRego() {\n      const baseURI = \"http://localhost:8000/rego\";\n      var jsonContent = this.editor.getJSON();\n      var htmlContent = this.editor.getHTML();\n      console.log(jsonContent.content);\n      var regoToSend = this.createFormattedString(jsonContent.content);\n      console.log(regoToSend);\n      var opa = await this.$http.post(baseURI, { rego: regoToSend });\n      console.log(opa);\n    },\n    parseJwt() {\n      var base64Url = this.access_token.split(\".\")[1];\n      var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      var jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map(function(c) {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n          })\n          .join(\"\")\n      );\n      this.opaMessageTitle = \"Parsed Access Token\"\n      this.opaResponse = JSON.parse(jsonPayload);\n      this.dialog = true\n    },\n    async easyAuthorization() {\n      var component = this;\n      const baseURI = \"http://localhost:8000/easyRego\";\n      var opa = await this.$http.get(baseURI);\n      this.regoFragements = opa.data.rego.split(\"\\n\");\n      var rego = opa.data.rego.split(\"\\n\").join(\"</br>\");\n      var niceRego = this.createPrettyString(this.regoFragements);\n      var regoWithSettings = this.easyAuthorizationSettings(niceRego);\n      this.editor.setContent(regoWithSettings);\n      this.saveRego();\n    },\n    easyAuthorizationSettings(rego) {\n      var regoSettingsString = \"\";\n      if (this.checkForClaim) {\n        regoSettingsString += \"<p>\" + \"user_owns_claim\" + \"</p></br>\";\n        rego.replace(\"#claim#\", this.claimToCheck);\n      }\n      if (this.checkForScope) {\n        regoSettingsString += \"<p>\" + \"user_owns_scope\" + \"</p></br>\";\n        rego.replace(\"#scope#\", this.scopeToCheck);\n      }\n      if (this.checkForGroup) {\n        regoSettingsString += \"<p>\" + \"user_owns_role\" + \"</p></br>\";\n      }\n      if (this.checkForUser) {\n        regoSettingsString += \"<p>\" + \"user_owns_username\" + \"</p></br>\";\n      }\n      var newRego = rego\n        .replace(\"#placeholder#\", regoSettingsString)\n        .replace(\"#username#\", this.userForCheck)\n        .replace(\"#role#\", this.groupForCheck)\n        .replace(\"#scope#\", this.scopeToCheck)\n        .replace(\"#claim#\", this.claimToCheck)\n        .replace(\"_replace_claim_key\", this.claimKey);\n      return newRego;\n    },\n    async sendToOpa() {\n      var component = this;\n      const baseURI = \"http://localhost:8000/opaAuthz\";\n      var opa = await this.$http.post(baseURI, {\n        method: component.method,\n        path: component.path,\n        token: component.access_token\n      });\n      console.log(opa);\n      component.opaMessageTitle = \"Response from Opa!\";\n      component.opaResponse = opa.data;\n      component.dialog = true;\n    },\n    async resetRego() {\n      const baseURI = \"http://localhost:8000/rego\";\n      var opa = await this.$http.delete(baseURI);\n      this.$router.go();\n    },\n    createPrettyString(fragments) {\n      var string = \"\";\n      fragments.forEach((item, i) => {\n        string += \"<p>\" + item + \"</p><br>\";\n      });\n      return string;\n    },\n    createFormattedString(contentObjects) {\n      var string = \"\";\n      contentObjects.forEach((item, i) => {\n        if (item.content) {\n          string += item.content[0].text + \"\\n\";\n          if (item.content[0].text.includes(\"}\")) {\n            string += \"\\n\";\n          }\n        }\n      });\n      return string;\n    },\n    async logout() {\n      await this.$auth.logout();\n      await this.$auth.isAuthenticated();\n\n      // Navigate back to home\n      window.location.reload();\n    }\n  }\n};\n</script>\n \n<style>\n.scroll {\n  overflow-y: auto;\n  height: 600px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}