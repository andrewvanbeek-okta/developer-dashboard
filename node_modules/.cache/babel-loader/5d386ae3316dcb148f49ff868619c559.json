{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VSwitch/VSwitch.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VSwitch/VSwitch.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/styles/components/_selection-controls.sass\";\nimport \"../../../src/components/VSwitch/VSwitch.sass\"; // Mixins\n\nimport Selectable from \"../../mixins/selectable\";\nimport VInput from \"../VInput\"; // Directives\n\nimport Touch from \"../../directives/touch\"; // Components\n\nimport { VFabTransition } from \"../transitions\";\nimport VProgressCircular from \"../VProgressCircular/VProgressCircular\"; // Helpers\n\nimport { keyCodes } from \"../../util/helpers\";\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-switch',\n  directives: {\n    Touch: Touch\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VInput.options.computed.classes.call(this), {\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      });\n    },\n    attrs: function attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch'\n      };\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n    switchData: function switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n    genSwitch: function genSwitch() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', _objectSpread({}, this.attrs, {}, this.attrs$)), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__track'\n      }, this.switchData)), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__thumb'\n      }, this.switchData), [this.genProgress()])]);\n    },\n    genProgress: function genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n    onKeydown: function onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VSwitch/VSwitch.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n"],"sourceRoot":""}]}