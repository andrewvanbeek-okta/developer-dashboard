{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VCheckbox/VCheckbox.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VCheckbox/VCheckbox.js","mtime":1592873617735},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\n\nimport VIcon from \"../VIcon\";\nimport VInput from \"../VInput\"; // Mixins\n\nimport Selectable from \"../../mixins/selectable\";\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-checkbox',\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate'\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff'\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn'\n    }\n  },\n  data: function data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VInput.options.computed.classes.call(this), {\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate\n      });\n    },\n    computedIcon: function computedIcon() {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon;\n      } else if (this.isActive) {\n        return this.onIcon;\n      } else {\n        return this.offIcon;\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.disabled && !this.inputIndeterminate) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    }\n  },\n  watch: {\n    indeterminate: function indeterminate(val) {\n      var _this = this;\n\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(function () {\n        return _this.inputIndeterminate = val;\n      });\n    },\n    inputIndeterminate: function inputIndeterminate(val) {\n      this.$emit('update:indeterminate', val);\n    },\n    isActive: function isActive() {\n      if (!this.indeterminate) return;\n      this.inputIndeterminate = false;\n    }\n  },\n  methods: {\n    genCheckbox: function genCheckbox() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.$createElement(VIcon, this.setTextColor(this.validationState, {\n        props: {\n          dense: this.dense,\n          dark: this.dark,\n          light: this.light\n        }\n      }), this.computedIcon), this.genInput('checkbox', _objectSpread({}, this.attrs$, {\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\n      })), this.genRipple(this.setTextColor(this.rippleState))]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genCheckbox(), this.genLabel()];\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VCheckbox/VCheckbox.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.disabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...this.attrs$,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n"],"sourceRoot":""}]}