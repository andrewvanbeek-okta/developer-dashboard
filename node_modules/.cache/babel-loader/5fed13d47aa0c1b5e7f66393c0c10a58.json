{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-base.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-base.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n// Mixins\nimport mixins from \"../../../util/mixins\";\nimport Colorable from \"../../../mixins/colorable\";\nimport Localable from \"../../../mixins/localable\";\nimport Mouse from \"./mouse\";\nimport Themeable from \"../../../mixins/themeable\";\nimport Times from \"./times\"; // Directives\n\nimport Resize from \"../../../directives/resize\"; // Util\n\nimport props from \"../util/props\";\nimport { parseTimestamp, getWeekdaySkips, createDayList, createNativeLocaleFormatter, getStartOfWeek as _getStartOfWeek, getEndOfWeek as _getEndOfWeek, getTimestampIdentifier } from \"../util/timestamp\";\nexport default mixins(Colorable, Localable, Mouse, Themeable, Times\n/* @vue/component */\n).extend({\n  name: 'calendar-base',\n  directives: {\n    Resize: Resize\n  },\n  props: props.base,\n  computed: {\n    parsedWeekdays: function parsedWeekdays() {\n      return Array.isArray(this.weekdays) ? this.weekdays : (this.weekdays || '').split(',').map(function (x) {\n        return parseInt(x, 10);\n      });\n    },\n    weekdaySkips: function weekdaySkips() {\n      return getWeekdaySkips(this.parsedWeekdays);\n    },\n    weekdaySkipsReverse: function weekdaySkipsReverse() {\n      var reversed = this.weekdaySkips.slice();\n      reversed.reverse();\n      return reversed;\n    },\n    parsedStart: function parsedStart() {\n      return parseTimestamp(this.start, true);\n    },\n    parsedEnd: function parsedEnd() {\n      var start = this.parsedStart;\n      var end = this.end ? parseTimestamp(this.end) || start : start;\n      return getTimestampIdentifier(end) < getTimestampIdentifier(start) ? start : end;\n    },\n    days: function days() {\n      return createDayList(this.parsedStart, this.parsedEnd, this.times.today, this.weekdaySkips);\n    },\n    dayFormatter: function dayFormatter() {\n      if (this.dayFormat) {\n        return this.dayFormat;\n      }\n\n      var options = {\n        timeZone: 'UTC',\n        day: 'numeric'\n      };\n      return createNativeLocaleFormatter(this.currentLocale, function (_tms, _short) {\n        return options;\n      });\n    },\n    weekdayFormatter: function weekdayFormatter() {\n      if (this.weekdayFormat) {\n        return this.weekdayFormat;\n      }\n\n      var longOptions = {\n        timeZone: 'UTC',\n        weekday: 'long'\n      };\n      var shortOptions = {\n        timeZone: 'UTC',\n        weekday: 'short'\n      };\n      return createNativeLocaleFormatter(this.currentLocale, function (_tms, short) {\n        return short ? shortOptions : longOptions;\n      });\n    }\n  },\n  methods: {\n    getRelativeClasses: function getRelativeClasses(timestamp) {\n      var outside = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return {\n        'v-present': timestamp.present,\n        'v-past': timestamp.past,\n        'v-future': timestamp.future,\n        'v-outside': outside\n      };\n    },\n    getStartOfWeek: function getStartOfWeek(timestamp) {\n      return _getStartOfWeek(timestamp, this.parsedWeekdays, this.times.today);\n    },\n    getEndOfWeek: function getEndOfWeek(timestamp) {\n      return _getEndOfWeek(timestamp, this.parsedWeekdays, this.times.today);\n    },\n    getFormatter: function getFormatter(options) {\n      return createNativeLocaleFormatter(this.locale, function (_tms, _short) {\n        return options;\n      });\n    }\n  }\n});",{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-base.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Mixins\nimport mixins from '../../../util/mixins'\nimport Colorable from '../../../mixins/colorable'\nimport Localable from '../../../mixins/localable'\nimport Mouse from './mouse'\nimport Themeable from '../../../mixins/themeable'\nimport Times from './times'\n\n// Directives\nimport Resize from '../../../directives/resize'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTimestamp,\n  getWeekdaySkips,\n  createDayList,\n  createNativeLocaleFormatter,\n  getStartOfWeek,\n  getEndOfWeek,\n  getTimestampIdentifier,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'types'\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Mouse,\n  Themeable,\n  Times\n/* @vue/component */\n).extend({\n  name: 'calendar-base',\n\n  directives: {\n    Resize,\n  },\n\n  props: props.base,\n\n  computed: {\n    parsedWeekdays (): number[] {\n      return Array.isArray(this.weekdays)\n        ? this.weekdays\n        : (this.weekdays || '').split(',').map(x => parseInt(x, 10))\n    },\n    weekdaySkips (): number[] {\n      return getWeekdaySkips(this.parsedWeekdays)\n    },\n    weekdaySkipsReverse (): number [] {\n      const reversed = this.weekdaySkips.slice()\n      reversed.reverse()\n      return reversed\n    },\n    parsedStart (): CalendarTimestamp {\n      return parseTimestamp(this.start, true)\n    },\n    parsedEnd (): CalendarTimestamp {\n      const start = this.parsedStart\n      const end: CalendarTimestamp = this.end ? parseTimestamp(this.end) || start : start\n\n      return getTimestampIdentifier(end) < getTimestampIdentifier(start) ? start : end\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips\n      )\n    },\n    dayFormatter (): CalendarFormatter {\n      if (this.dayFormat) {\n        return this.dayFormat as CalendarFormatter\n      }\n\n      const options = { timeZone: 'UTC', day: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, _short) => options\n      )\n    },\n    weekdayFormatter (): CalendarFormatter {\n      if (this.weekdayFormat) {\n        return this.weekdayFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', weekday: 'long' }\n      const shortOptions = { timeZone: 'UTC', weekday: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    getRelativeClasses (timestamp: CalendarTimestamp, outside = false): object {\n      return {\n        'v-present': timestamp.present,\n        'v-past': timestamp.past,\n        'v-future': timestamp.future,\n        'v-outside': outside,\n      }\n    },\n    getStartOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getStartOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getEndOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getEndOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getFormatter (options: object): CalendarFormatter {\n      return createNativeLocaleFormatter(\n        this.locale,\n        (_tms, _short) => options\n      )\n    },\n  },\n})\n"],"sourceRoot":""}]}