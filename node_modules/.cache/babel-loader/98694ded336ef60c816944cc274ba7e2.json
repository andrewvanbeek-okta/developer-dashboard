{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","mtime":1592873617724},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VBreadcrumbs/VBreadcrumbs.sass\"; // Components\n\nimport VBreadcrumbsItem from \"./VBreadcrumbsItem\";\nimport VBreadcrumbsDivider from \"./VBreadcrumbsDivider\"; // Mixins\n\nimport Themeable from \"../../mixins/themeable\"; // Utils\n\nimport mixins from \"../../util/mixins\";\nexport default mixins(Themeable\n/* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n  props: {\n    divider: {\n      type: String,\n      default: '/'\n    },\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    large: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-breadcrumbs--large': this.large\n      }, this.themeClasses);\n    }\n  },\n  methods: {\n    genDivider: function genDivider() {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider);\n    },\n    genItems: function genItems() {\n      var items = [];\n      var hasSlot = !!this.$scopedSlots.item;\n      var keys = [];\n\n      for (var i = 0; i < this.items.length; i++) {\n        var item = this.items[i];\n        keys.push(item.text);\n        if (hasSlot) items.push(this.$scopedSlots.item({\n          item: item\n        }));else items.push(this.$createElement(VBreadcrumbsItem, {\n          key: keys.join('.'),\n          props: item\n        }, [item.text]));\n        if (i < this.items.length - 1) items.push(this.genDivider());\n      }\n\n      return items;\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default || this.genItems();\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes\n    }, children);\n  }\n});",{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,gE,CAKA;;AACA,OAAA,gBAAA;AACA,OAAA,mBAAA,8B,CAEA;;AACA,OAAA,SAAA,+B,CAEA;;AACA,OAAA,MAAA;AAEA,eAAe,MAAM,CACnB;AACA;AAFmB,CAAN,CAAA,MAAA,CAGN;AACP,EAAA,IAAI,EADG,eAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EADG,MAAA;AAEP,MAAA,OAAO,EAAE;AAFF,KADJ;AAKL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,KAAA;AAEL,MAAA,OAAO,EAAE;AAAA,eAAO,EAAP;AAAA;AAFJ,KALF;AASL,IAAA,KAAK,EAAE;AATF,GAHA;AAeP,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL;AACE,gCAAwB,KADnB;AAAP,SAEK,KAAK,YAFV;AAID;AANO,GAfH;AAwBP,EAAA,OAAO,EAAE;AACP,IAAA,UADO,wBACG;AACR,aAAO,KAAA,cAAA,CAAA,mBAAA,EAAyC,KAAA,MAAA,CAAA,OAAA,GAAsB,KAAA,MAAA,CAAtB,OAAA,GAA4C,KAA5F,OAAO,CAAP;AAFK,KAAA;AAIP,IAAA,QAJO,sBAIC;AACN,UAAM,KAAK,GAAX,EAAA;AACA,UAAM,OAAO,GAAG,CAAC,CAAC,KAAA,YAAA,CAAlB,IAAA;AACA,UAAM,IAAI,GAAV,EAAA;;AAEA,WAAK,IAAI,CAAC,GAAV,CAAA,EAAgB,CAAC,GAAG,KAAA,KAAA,CAApB,MAAA,EAAuC,CAAvC,EAAA,EAA4C;AAC1C,YAAM,IAAI,GAAG,KAAA,KAAA,CAAb,CAAa,CAAb;AAEA,QAAA,IAAI,CAAJ,IAAA,CAAU,IAAI,CAAd,IAAA;AAEA,YAAA,OAAA,EAAa,KAAK,CAAL,IAAA,CAAW,KAAA,YAAA,CAAA,IAAA,CAAwB;AAAE,UAAA,IAAA,EAAA;AAAF,SAAxB,CAAX,EAAb,KACK,KAAK,CAAL,IAAA,CAAW,KAAA,cAAA,CAAA,gBAAA,EAAsC;AAAE,UAAA,GAAG,EAAE,IAAI,CAAJ,IAAA,CAAP,GAAO,CAAP;AAAuB,UAAA,KAAK,EAAE;AAA9B,SAAtC,EAA4E,CAAC,IAAI,CAA5F,IAAuF,CAA5E,CAAX;AAEL,YAAI,CAAC,GAAG,KAAA,KAAA,CAAA,MAAA,GAAR,CAAA,EAA+B,KAAK,CAAL,IAAA,CAAW,KAAX,UAAW,EAAX;AAChC;;AAED,aAAA,KAAA;AACD;AArBM,GAxBF;AAgDP,EAAA,MAhDO,kBAgDD,CAhDC,EAgDE;AACP,QAAM,QAAQ,GAAG,KAAA,MAAA,CAAA,OAAA,IAAuB,KAAxC,QAAwC,EAAxC;AAEA,WAAO,CAAC,CAAA,IAAA,EAAO;AACb,MAAA,WAAW,EADE,eAAA;AAEb,MAAA,KAAK,EAAE,KAAK;AAFC,KAAP,EAAR,QAAQ,CAAR;AAID;AAvDM,CAHM,CAAf","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\n// Components\nimport VBreadcrumbsItem from './VBreadcrumbsItem'\nimport VBreadcrumbsDivider from './VBreadcrumbsDivider'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/',\n    },\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => ([]),\n    },\n    large: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    },\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default || this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes,\n    }, children)\n  },\n})\n"],"sourceRoot":""}]}