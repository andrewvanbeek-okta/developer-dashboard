{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VStepper/VStepperStep.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VStepper/VStepperStep.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n// Components\nimport VIcon from \"../VIcon\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport { inject as RegistrableInject } from \"../../mixins/registrable\"; // Directives\n\nimport ripple from \"../../directives/ripple\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Colorable, RegistrableInject('stepper', 'v-stepper-step', 'v-stepper'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-stepper-step',\n  directives: {\n    ripple: ripple\n  },\n  inject: ['stepClick'],\n  props: {\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete'\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit'\n    },\n    errorIcon: {\n      type: String,\n      default: '$error'\n    },\n    rules: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    step: [Number, String]\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      isInactive: true\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete\n      };\n    },\n    hasError: function hasError() {\n      return this.rules.some(function (validate) {\n        return validate() !== true;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.stepper && this.stepper.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stepper && this.stepper.unregister(this);\n  },\n  methods: {\n    click: function click(e) {\n      e.stopPropagation();\n      this.$emit('click', e);\n\n      if (this.editable) {\n        this.stepClick(this.step);\n      }\n    },\n    genIcon: function genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n    genLabel: function genLabel() {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label'\n      }, this.$slots.default);\n    },\n    genStep: function genStep() {\n      var color = !this.hasError && (this.complete || this.isActive) ? this.color : false;\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step'\n      }), this.genStepContent());\n    },\n    genStepContent: function genStepContent() {\n      var children = [];\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon));\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon));\n        } else {\n          children.push(this.genIcon(this.completeIcon));\n        }\n      } else {\n        children.push(String(this.step));\n      }\n\n      return children;\n    },\n    toggle: function toggle(step) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isInactive = Number(step) < Number(this.step);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable\n      }],\n      on: {\n        click: this.click\n      }\n    }, [this.genStep(), this.genLabel()]);\n  }\n});",{"version":3,"sources":["../../../src/components/VStepper/VStepperStep.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype VuetifyStepperRuleValidator = () => string | boolean\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('stepper', 'v-stepper-step', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  stepClick: (step: number | string) => void\n}\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-step',\n\n  directives: { ripple },\n\n  inject: ['stepClick'],\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete',\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit',\n    },\n    errorIcon: {\n      type: String,\n      default: '$error',\n    },\n    rules: {\n      type: Array as PropType<VuetifyStepperRuleValidator[]>,\n      default: () => [],\n    },\n    step: [Number, String],\n  },\n\n  data () {\n    return {\n      isActive: false,\n      isInactive: true,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete,\n      }\n    },\n    hasError (): boolean {\n      return this.rules.some(validate => validate() !== true)\n    },\n  },\n\n  mounted () {\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    click (e: MouseEvent) {\n      e.stopPropagation()\n\n      this.$emit('click', e)\n\n      if (this.editable) {\n        this.stepClick(this.step)\n      }\n    },\n    genIcon (icon: string) {\n      return this.$createElement(VIcon, icon)\n    },\n    genLabel () {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label',\n      }, this.$slots.default)\n    },\n    genStep () {\n      const color = (!this.hasError && (this.complete || this.isActive)) ? this.color : false\n\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step',\n      }), this.genStepContent())\n    },\n    genStepContent () {\n      const children = []\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon))\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon))\n        } else {\n          children.push(this.genIcon(this.completeIcon))\n        }\n      } else {\n        children.push(String(this.step))\n      }\n\n      return children\n    },\n    toggle (step: number | string) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isInactive = Number(step) < Number(this.step)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable,\n      }],\n      on: { click: this.click },\n    }, [\n      this.genStep(),\n      this.genLabel(),\n    ])\n  },\n})\n"],"sourceRoot":""}]}