{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VTextField/VTextField.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VTextField/VTextField.js","mtime":1592873617808},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\"; // Extensions\n\nimport VInput from \"../VInput\"; // Components\n\nimport VCounter from \"../VCounter\";\nimport VLabel from \"../VLabel\"; // Mixins\n\nimport Intersectable from \"../../mixins/intersectable\";\nimport Loadable from \"../../mixins/loadable\";\nimport Validatable from \"../../mixins/validatable\"; // Directives\n\nimport ripple from \"../../directives/ripple\"; // Utilities\n\nimport { convertToUnit, keyCodes } from \"../../util/helpers\";\nimport { breaking, consoleWarn } from \"../../util/console\"; // Types\n\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(VInput, Intersectable({\n  onVisible: ['setLabelWidth', 'setPrefixWidth', 'setPrependWidth', 'tryAutofocus']\n}), Loadable);\nvar dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-text-field',\n  directives: {\n    ripple: ripple\n  },\n  inheritAttrs: false,\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear'\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: function data() {\n    return {\n      badInput: false,\n      labelWidth: 0,\n      prefixWidth: 0,\n      prependWidth: 0,\n      initialValue: null,\n      isBooted: false,\n      isClearing: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VInput.options.computed.classes.call(this), {\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped\n      });\n    },\n    computedColor: function computedColor() {\n      var computedColor = Validatable.options.computed.computedColor.call(this);\n      if (!this.soloInverted || !this.isFocused) return computedColor;\n      return this.color || 'primary';\n    },\n    computedCounterValue: function computedCounterValue() {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue);\n      }\n\n      return (this.internalValue || '').toString().length;\n    },\n    hasCounter: function hasCounter() {\n      return this.counter !== false && this.counter != null;\n    },\n    hasDetails: function hasDetails() {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter;\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit('input', this.lazyValue);\n      }\n    },\n    isDirty: function isDirty() {\n      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput;\n    },\n    isEnclosed: function isEnclosed() {\n      return this.filled || this.isSolo || this.outlined;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty || dirtyTypes.includes(this.type);\n    },\n    isSingle: function isSingle() {\n      return this.isSolo || this.singleLine || this.fullWidth || // https://material.io/components/text-fields/#filled-text-field\n      this.filled && !this.hasLabel;\n    },\n    isSolo: function isSolo() {\n      return this.solo || this.soloInverted;\n    },\n    labelPosition: function labelPosition() {\n      var offset = this.prefix && !this.labelValue ? this.prefixWidth : 0;\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth;\n      return this.$vuetify.rtl === this.reverse ? {\n        left: offset,\n        right: 'auto'\n      } : {\n        left: 'auto',\n        right: offset\n      };\n    },\n    showLabel: function showLabel() {\n      return this.hasLabel && (!this.isSingle || !this.isLabelActive && !this.placeholder);\n    },\n    labelValue: function labelValue() {\n      return !this.isSingle && Boolean(this.isFocused || this.isLabelActive || this.placeholder);\n    }\n  },\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label: function label() {\n      this.$nextTick(this.setLabelWidth);\n    },\n    prefix: function prefix() {\n      this.$nextTick(this.setPrefixWidth);\n    },\n    isFocused: 'updateValue',\n    value: function value(val) {\n      this.lazyValue = val;\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this);\n    }\n    /* istanbul ignore next */\n\n\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this);\n    }\n    /* istanbul ignore if */\n\n\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.autofocus && this.tryAutofocus();\n    this.setLabelWidth();\n    this.setPrefixWidth();\n    this.setPrependWidth();\n    requestAnimationFrame(function () {\n      return _this.isBooted = true;\n    });\n  },\n  methods: {\n    /** @public */\n    focus: function focus() {\n      this.onFocus();\n    },\n\n    /** @public */\n    blur: function blur(e) {\n      var _this2 = this;\n\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(function () {\n        _this2.$refs.input && _this2.$refs.input.blur();\n      });\n    },\n    clearableCallback: function clearableCallback() {\n      var _this3 = this;\n\n      this.$refs.input && this.$refs.input.focus();\n      this.$nextTick(function () {\n        return _this3.internalValue = null;\n      });\n    },\n    genAppendSlot: function genAppendSlot() {\n      var slot = [];\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer']);\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n    genPrependInnerSlot: function genPrependInnerSlot() {\n      var slot = [];\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner']);\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'));\n      }\n\n      return this.genSlot('prepend', 'inner', slot);\n    },\n    genIconSlot: function genIconSlot() {\n      var slot = [];\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append']);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'inner', slot);\n    },\n    genInputSlot: function genInputSlot() {\n      var input = VInput.options.methods.genInputSlot.call(this);\n      var prepend = this.genPrependInnerSlot();\n\n      if (prepend) {\n        input.children = input.children || [];\n        input.children.unshift(prepend);\n      }\n\n      return input;\n    },\n    genClearIcon: function genClearIcon() {\n      if (!this.clearable) return null;\n      var data = this.isDirty ? undefined : {\n        attrs: {\n          disabled: true\n        }\n      };\n      return this.genSlot('append', 'inner', [this.genIcon('clear', this.clearableCallback, data)]);\n    },\n    genCounter: function genCounter() {\n      if (!this.hasCounter) return null;\n      var max = this.counter === true ? this.attrs$.maxlength : this.counter;\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max: max,\n          value: this.computedCounterValue\n        }\n      });\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genFieldset(), this.genTextFieldSlot(), this.genClearIcon(), this.genIconSlot(), this.genProgress()];\n    },\n    genFieldset: function genFieldset() {\n      if (!this.outlined) return null;\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true\n        }\n      }, [this.genLegend()]);\n    },\n    genLabel: function genLabel() {\n      if (!this.showLabel) return null;\n      var data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      };\n      return this.$createElement(VLabel, data, this.$slots.label || this.label);\n    },\n    genLegend: function genLegend() {\n      var width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0;\n      var span = this.$createElement('span', {\n        domProps: {\n          innerHTML: '&#8203;'\n        }\n      });\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined\n        }\n      }, [span]);\n    },\n    genInput: function genInput() {\n      var listeners = Object.assign({}, this.listeners$);\n      delete listeners['change']; // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue\n        },\n        attrs: _objectSpread({}, this.attrs$, {\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type\n        }),\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n          compositionend: this.onCompositionEnd\n        }),\n        ref: 'input'\n      });\n    },\n    genMessages: function genMessages() {\n      if (!this.showDetails) return null;\n      var messagesNode = VInput.options.methods.genMessages.call(this);\n      var counterNode = this.genCounter();\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [messagesNode, counterNode]);\n    },\n    genTextFieldSlot: function genTextFieldSlot() {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, this.genInput(), this.suffix ? this.genAffix('suffix') : null]);\n    },\n    genAffix: function genAffix(type) {\n      return this.$createElement('div', {\n        class: \"v-text-field__\".concat(type),\n        ref: type\n      }, this[type]);\n    },\n    onBlur: function onBlur(e) {\n      var _this4 = this;\n\n      this.isFocused = false;\n      e && this.$nextTick(function () {\n        return _this4.$emit('blur', e);\n      });\n    },\n    onClick: function onClick() {\n      if (this.isFocused || this.disabled || !this.$refs.input) return;\n      this.$refs.input.focus();\n    },\n    onCompositionEnd: function onCompositionEnd(e) {\n      var target = e.target;\n      this.internalValue = target.value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n    onFocus: function onFocus(e) {\n      if (!this.$refs.input) return;\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        e && this.$emit('focus', e);\n      }\n    },\n    onInput: function onInput(e) {\n      if (!e.isComposing) {\n        this.onCompositionEnd(e);\n      }\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (!e.isComposing && e.keyCode === keyCodes.enter) {\n        this.$emit('change', this.internalValue);\n      }\n\n      this.$emit('keydown', e);\n    },\n    onMouseDown: function onMouseDown(e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      if (this.hasMouseDown) this.focus();\n      VInput.options.methods.onMouseUp.call(this, e);\n    },\n    setLabelWidth: function setLabelWidth() {\n      if (!this.outlined || !this.$refs.label) return;\n      this.labelWidth = Math.min(this.$refs.label.scrollWidth * 0.75 + 6, this.$el.offsetWidth - 24);\n    },\n    setPrefixWidth: function setPrefixWidth() {\n      if (!this.$refs.prefix) return;\n      this.prefixWidth = this.$refs.prefix.offsetWidth;\n    },\n    setPrependWidth: function setPrependWidth() {\n      if (!this.outlined || !this.$refs['prepend-inner']) return;\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth;\n    },\n    tryAutofocus: function tryAutofocus() {\n      if (!this.autofocus || typeof document === 'undefined' || !this.$refs.input || document.activeElement === this.$refs.input) return false;\n      this.$refs.input.focus();\n      return true;\n    },\n    updateValue: function updateValue(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VTextField/VTextField.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'setLabelWidth',\n      'setPrefixWidth',\n      'setPrependWidth',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\ninterface InputEvent extends UIEvent {\n  isComposing: Boolean\n}\ninterface KeyboardEvent extends UIEvent {\n  keyCode: Number\n  isComposing: Boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return (this.internalValue || '').toString().length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.tryAutofocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue,\n        },\n      })\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n          compositionend: this.onCompositionEnd,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.disabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onCompositionEnd (e: Event) {\n      const target = e.target as HTMLInputElement\n\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      if (!(e as InputEvent).isComposing) {\n        this.onCompositionEnd(e)\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (!e.isComposing && e.keyCode === keyCodes.enter) {\n        this.$emit('change', this.internalValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined || !this.$refs.label) return\n\n      this.labelWidth = Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}