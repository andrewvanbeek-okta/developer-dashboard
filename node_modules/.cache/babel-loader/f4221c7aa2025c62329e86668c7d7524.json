{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VFileInput/VFileInput.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VFileInput/VFileInput.js","mtime":1592873617757},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\n\nimport VTextField from \"../VTextField\"; // Components\n\nimport { VChip } from \"../VChip\"; // Utilities\n\nimport { deepEqual, humanReadableFileSize, wrapInArray } from \"../../util/helpers\";\nimport { consoleError } from \"../../util/console\";\nexport default VTextField.extend({\n  name: 'v-file-input',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: function validator(v) {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22\n    },\n    type: {\n      type: String,\n      default: 'file'\n    },\n    value: {\n      default: undefined,\n      validator: function validator(val) {\n        return wrapInArray(val).every(function (v) {\n          return v != null && _typeof(v) === 'object';\n        });\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VTextField.options.computed.classes.call(this), {\n        'v-file-input': true\n      });\n    },\n    computedCounterValue: function computedCounterValue() {\n      var fileCount = this.isMultiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\n      var bytes = this.internalArrayValue.reduce(function (bytes, _ref) {\n        var _ref$size = _ref.size,\n            size = _ref$size === void 0 ? 0 : _ref$size;\n        return bytes + size;\n      }, 0);\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\n    },\n    internalArrayValue: function internalArrayValue() {\n      return wrapInArray(this.internalValue);\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    isDirty: function isDirty() {\n      return this.internalArrayValue.length > 0;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    },\n    isMultiple: function isMultiple() {\n      return this.$attrs.hasOwnProperty('multiple');\n    },\n    text: function text() {\n      var _this = this;\n\n      if (!this.isDirty) return [this.placeholder];\n      return this.internalArrayValue.map(function (file) {\n        var _file$name = file.name,\n            name = _file$name === void 0 ? '' : _file$name,\n            _file$size = file.size,\n            size = _file$size === void 0 ? 0 : _file$size;\n\n        var truncatedText = _this.truncateText(name);\n\n        return !_this.showSize ? truncatedText : \"\".concat(truncatedText, \" (\").concat(humanReadableFileSize(size, _this.base === 1024), \")\");\n      });\n    },\n    base: function base() {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\n    },\n    hasChips: function hasChips() {\n      return this.chips || this.smallChips;\n    }\n  },\n  watch: {\n    readonly: {\n      handler: function handler(v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\n      },\n      immediate: true\n    },\n    value: function value(v) {\n      var value = this.isMultiple ? v : v ? [v] : [];\n\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = '';\n      }\n    }\n  },\n  methods: {\n    clearableCallback: function clearableCallback() {\n      this.internalValue = this.isMultiple ? [] : undefined;\n      this.$refs.input.value = '';\n    },\n    genChips: function genChips() {\n      var _this2 = this;\n\n      if (!this.isDirty) return [];\n      return this.text.map(function (text, index) {\n        return _this2.$createElement(VChip, {\n          props: {\n            small: _this2.smallChips\n          },\n          on: {\n            'click:close': function clickClose() {\n              var internalValue = _this2.internalValue;\n              internalValue.splice(index, 1);\n              _this2.internalValue = internalValue; // Trigger the watcher\n            }\n          }\n        }, [text]);\n      });\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this); // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n\n      delete input.data.domProps.value; // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n\n      delete input.data.on.input;\n      input.data.on.change = this.onInput;\n      return [this.genSelections(), input];\n    },\n    genPrependSlot: function genPrependSlot() {\n      var _this3 = this;\n\n      if (!this.prependIcon) return null;\n      var icon = this.genIcon('prepend', function () {\n        _this3.$refs.input.click();\n      });\n      return this.genSlot('prepend', 'outer', [icon]);\n    },\n    genSelectionText: function genSelectionText() {\n      var length = this.text.length;\n      if (length < 2) return this.text;\n      if (this.showSize && !this.counter) return [this.computedCounterValue];\n      return [this.$vuetify.lang.t(this.counterString, length)];\n    },\n    genSelections: function genSelections() {\n      var _this4 = this;\n\n      var children = [];\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach(function (file, index) {\n          if (!_this4.$scopedSlots.selection) return;\n          children.push(_this4.$scopedSlots.selection({\n            text: _this4.text[index],\n            file: file,\n            index: index\n          }));\n        });\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\n        }\n      }, children);\n    },\n    genTextFieldSlot: function genTextFieldSlot() {\n      var _this5 = this;\n\n      var node = VTextField.options.methods.genTextFieldSlot.call(this);\n      node.data.on = _objectSpread({}, node.data.on || {}, {\n        click: function click() {\n          return _this5.$refs.input.click();\n        }\n      });\n      return node;\n    },\n    onInput: function onInput(e) {\n      var files = _toConsumableArray(e.target.files || []);\n\n      this.internalValue = this.isMultiple ? files : files[0]; // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n\n      this.initialValue = this.internalValue;\n    },\n    onKeyDown: function onKeyDown(e) {\n      this.$emit('keydown', e);\n    },\n    truncateText: function truncateText(str) {\n      if (str.length < Number(this.truncateLength)) return str;\n      var charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\n      return \"\".concat(str.slice(0, charsKeepOneSide), \"\\u2026\").concat(str.slice(str.length - charsKeepOneSide));\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VFileInput/VFileInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n"],"sourceRoot":""}]}