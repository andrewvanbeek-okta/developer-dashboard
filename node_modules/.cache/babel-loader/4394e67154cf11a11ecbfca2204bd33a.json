{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VForm/VForm.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/components/VForm/VForm.js","mtime":1592873617759},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/andrewvanbeek/opa-dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Mixins\nimport mixins from \"../../util/mixins\";\nimport BindsAttrs from \"../../mixins/binds-attrs\";\nimport { provide as RegistrableProvide } from \"../../mixins/registrable\";\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n  inheritAttrs: false,\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean\n  },\n  data: function data() {\n    return {\n      inputs: [],\n      watchers: [],\n      errorBag: {}\n    };\n  },\n  watch: {\n    errorBag: {\n      handler: function handler(val) {\n        var errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput: function watchInput(input) {\n      var _this = this;\n\n      var watcher = function watcher(input) {\n        return input.$watch('hasError', function (val) {\n          _this.$set(_this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      var watchers = {\n        _uid: input._uid,\n        valid: function valid() {},\n        shouldValidate: function shouldValidate() {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', function (val) {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (_this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate: function validate() {\n      return this.inputs.filter(function (input) {\n        return !input.validate(true);\n      }).length === 0;\n    },\n\n    /** @public */\n    reset: function reset() {\n      this.inputs.forEach(function (input) {\n        return input.reset();\n      });\n      this.resetErrorBag();\n    },\n    resetErrorBag: function resetErrorBag() {\n      var _this2 = this;\n\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(function () {\n          _this2.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation: function resetValidation() {\n      this.inputs.forEach(function (input) {\n        return input.resetValidation();\n      });\n      this.resetErrorBag();\n    },\n    register: function register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n    unregister: function unregister(input) {\n      var found = this.inputs.find(function (i) {\n        return i._uid === input._uid;\n      });\n      if (!found) return;\n      var unwatch = this.watchers.find(function (i) {\n        return i._uid === found._uid;\n      });\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.inputs = this.inputs.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.$delete(this.errorBag, found._uid);\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: _objectSpread({\n        novalidate: true\n      }, this.attrs$),\n      on: {\n        submit: function submit(e) {\n          return _this3.$emit('submit', e);\n        }\n      }\n    }, this.$slots.default);\n  }\n});",{"version":3,"sources":["../../../src/components/VForm/VForm.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"],"sourceRoot":""}]}