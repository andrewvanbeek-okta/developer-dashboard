{"remainingRequest":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/measurable/index.js","dependencies":[{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/vuetify/lib/mixins/measurable/index.js","mtime":1592873617845},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":1592873611678},{"path":"/Users/andrewvanbeek/opa-dev-dash/node_modules/babel-loader/lib/index.js","mtime":1592873611535}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// Helpers\nimport { convertToUnit } from \"../../util/helpers\"; // Types\n\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'measurable',\n  props: {\n    height: [Number, String],\n    maxHeight: [Number, String],\n    maxWidth: [Number, String],\n    minHeight: [Number, String],\n    minWidth: [Number, String],\n    width: [Number, String]\n  },\n  computed: {\n    measurableStyles: function measurableStyles() {\n      var styles = {};\n      var height = convertToUnit(this.height);\n      var minHeight = convertToUnit(this.minHeight);\n      var minWidth = convertToUnit(this.minWidth);\n      var maxHeight = convertToUnit(this.maxHeight);\n      var maxWidth = convertToUnit(this.maxWidth);\n      var width = convertToUnit(this.width);\n      if (height) styles.height = height;\n      if (minHeight) styles.minHeight = minHeight;\n      if (minWidth) styles.minWidth = minWidth;\n      if (maxHeight) styles.maxHeight = maxHeight;\n      if (maxWidth) styles.maxWidth = maxWidth;\n      if (width) styles.width = width;\n      return styles;\n    }\n  }\n});",{"version":3,"sources":["../../../src/mixins/measurable/index.ts"],"names":[],"mappings":";AAAA;AACA,SAAA,aAAA,6B,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAIA,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,YAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,MAAM,EAAE,CAAA,MAAA,EADH,MACG,CADH;AAEL,IAAA,SAAS,EAAE,CAAA,MAAA,EAFN,MAEM,CAFN;AAGL,IAAA,QAAQ,EAAE,CAAA,MAAA,EAHL,MAGK,CAHL;AAIL,IAAA,SAAS,EAAE,CAAA,MAAA,EAJN,MAIM,CAJN;AAKL,IAAA,QAAQ,EAAE,CAAA,MAAA,EALL,MAKK,CALL;AAML,IAAA,KAAK,EAAE,CAAA,MAAA,EAAA,MAAA;AANF,GAHiB;AAYxB,EAAA,QAAQ,EAAE;AACR,IAAA,gBADQ,8BACQ;AACd,UAAM,MAAM,GAAZ,EAAA;AAEA,UAAM,MAAM,GAAG,aAAa,CAAC,KAA7B,MAA4B,CAA5B;AACA,UAAM,SAAS,GAAG,aAAa,CAAC,KAAhC,SAA+B,CAA/B;AACA,UAAM,QAAQ,GAAG,aAAa,CAAC,KAA/B,QAA8B,CAA9B;AACA,UAAM,SAAS,GAAG,aAAa,CAAC,KAAhC,SAA+B,CAA/B;AACA,UAAM,QAAQ,GAAG,aAAa,CAAC,KAA/B,QAA8B,CAA9B;AACA,UAAM,KAAK,GAAG,aAAa,CAAC,KAA5B,KAA2B,CAA3B;AAEA,UAAA,MAAA,EAAY,MAAM,CAAN,MAAA,GAAA,MAAA;AACZ,UAAA,SAAA,EAAe,MAAM,CAAN,SAAA,GAAA,SAAA;AACf,UAAA,QAAA,EAAc,MAAM,CAAN,QAAA,GAAA,QAAA;AACd,UAAA,SAAA,EAAe,MAAM,CAAN,SAAA,GAAA,SAAA;AACf,UAAA,QAAA,EAAc,MAAM,CAAN,QAAA,GAAA,QAAA;AACd,UAAA,KAAA,EAAW,MAAM,CAAN,KAAA,GAAA,KAAA;AAEX,aAAA,MAAA;AACD;AAnBO;AAZc,CAAX,CAAf","sourcesContent":["// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n"],"sourceRoot":""}]}