{"remainingRequest":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js!/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VBottomNavigation/VBottomNavigation.js","dependencies":[{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/vuetify/lib/components/VBottomNavigation/VBottomNavigation.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewvanbeek/okta/dev-dash/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/andrewvanbeek/okta/dev-dash/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VBottomNavigation/VBottomNavigation.sass\"; // Mixins\n\nimport Applicationable from \"../../mixins/applicationable\";\nimport ButtonGroup from \"../../mixins/button-group\";\nimport Colorable from \"../../mixins/colorable\";\nimport Measurable from \"../../mixins/measurable\";\nimport Proxyable from \"../../mixins/proxyable\";\nimport Scrollable from \"../../mixins/scrollable\";\nimport Themeable from \"../../mixins/themeable\";\nimport { factory as ToggleableFactory } from \"../../mixins/toggleable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nimport { breaking } from \"../../util/console\";\nexport default mixins(Applicationable('bottom', ['height', 'inputValue']), Colorable, Measurable, ToggleableFactory('inputValue'), Proxyable, Scrollable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active'\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true\n    },\n    mandatory: Boolean,\n    shift: Boolean\n  },\n  data: function data() {\n    return {\n      isActive: this.inputValue\n    };\n  },\n  computed: {\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.hideOnScroll || !this.inputValue);\n    },\n    classes: function classes() {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift\n      };\n    },\n    styles: function styles() {\n      return _objectSpread({}, this.measurableStyles, {\n        transform: this.isActive ? 'none' : 'translateY(100%)'\n      });\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this);\n    }\n  },\n  methods: {\n    thresholdMet: function thresholdMet() {\n      this.isActive = !this.isScrollingUp;\n      this.$emit('update:input-value', this.isActive);\n    },\n    updateApplication: function updateApplication() {\n      return this.$el ? this.$el.clientHeight : 0;\n    },\n    updateValue: function updateValue(val) {\n      this.$emit('change', val);\n    }\n  },\n  render: function render(h) {\n    var data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(this.mandatory || this.value !== undefined),\n        value: this.internalValue\n      },\n      on: {\n        change: this.updateValue\n      }\n    });\n\n    if (this.canScroll) {\n      data.directives = data.directives || [];\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default);\n  }\n});",{"version":3,"sources":["../../../src/components/VBottomNavigation/VBottomNavigation.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VBottomNavigation.sass'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Proxyable from '../../mixins/proxyable'\nimport Scrollable from '../../mixins/scrollable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Applicationable('bottom', [\n    'height',\n    'inputValue',\n  ]),\n  Colorable,\n  Measurable,\n  ToggleableFactory('inputValue'),\n  Proxyable,\n  Scrollable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active',\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true,\n    },\n    mandatory: Boolean,\n    shift: Boolean,\n  },\n\n  data () {\n    return {\n      isActive: this.inputValue,\n    }\n  },\n\n  computed: {\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.hideOnScroll ||\n          !this.inputValue\n        )\n      )\n    },\n    classes (): object {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift,\n      }\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        transform: this.isActive ? 'none' : 'translateY(100%)',\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this)\n    }\n  },\n\n  methods: {\n    thresholdMet () {\n      this.isActive = !this.isScrollingUp\n      this.$emit('update:input-value', this.isActive)\n    },\n    updateApplication (): number {\n      return this.$el\n        ? this.$el.clientHeight\n        : 0\n    },\n    updateValue (val: any) {\n      this.$emit('change', val)\n    },\n  },\n\n  render (h): VNode {\n    const data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(\n          this.mandatory ||\n          this.value !== undefined\n        ),\n        value: this.internalValue,\n      },\n      on: { change: this.updateValue },\n    })\n\n    if (this.canScroll) {\n      data.directives = data.directives || []\n\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default)\n  },\n})\n"],"sourceRoot":""}]}