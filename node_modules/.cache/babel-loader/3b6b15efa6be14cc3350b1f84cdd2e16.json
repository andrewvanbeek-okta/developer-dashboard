{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VOverflowBtn/VOverflowBtn.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/components/VOverflowBtn/VOverflowBtn.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/maxpollard/developer-dashboard/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VOverflowBtn/VOverflowBtn.sass\"; // Extensions\n\nimport VSelect from \"../VSelect/VSelect\";\nimport VAutocomplete from \"../VAutocomplete\";\nimport VTextField from \"../VTextField/VTextField\"; // Components\n\nimport VBtn from \"../VBtn\"; // Utilities\n\nimport { consoleWarn } from \"../../util/console\";\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n  props: {\n    editable: Boolean,\n    segmented: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VAutocomplete.options.computed.classes.call(this), {\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable\n      });\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return this.editable || VAutocomplete.options.computed.isAnyValueAllowed.call(this);\n    },\n    isSingle: function isSingle() {\n      return true;\n    },\n    computedItems: function computedItems() {\n      return this.segmented ? this.allItems : this.filteredItems;\n    }\n  },\n  methods: {\n    genSelections: function genSelections() {\n      return this.editable ? VAutocomplete.options.methods.genSelections.call(this) : VSelect.options.methods.genSelections.call(this); // Override v-autocomplete's override\n    },\n    genCommaSelection: function genCommaSelection(item, index, last) {\n      return this.segmented ? this.genSegmentedBtn(item) : VSelect.options.methods.genCommaSelection.call(this, item, index, last);\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.domProps.value = this.editable ? this.internalSearch : '';\n      input.data.attrs.readonly = !this.isAnyValueAllowed;\n      return input;\n    },\n    genLabel: function genLabel() {\n      if (this.editable && this.isFocused) return null;\n      var label = VTextField.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data = label.data || {}; // Reset previously set styles from parent\n\n      label.data.style = {};\n      return label;\n    },\n    genSegmentedBtn: function genSegmentedBtn(item) {\n      var _this = this;\n\n      var itemValue = this.getValue(item);\n      var itemObj = this.computedItems.find(function (i) {\n        return _this.getValue(i) === itemValue;\n      }) || item;\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \\'segmented\\' prop without a selection slot, items must contain both a text and callback property', this);\n        return null;\n      }\n\n      return this.$createElement(VBtn, {\n        props: {\n          text: true\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            itemObj.callback(e);\n          }\n        }\n      }, [itemObj.text]);\n    },\n    updateValue: function updateValue(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VOverflowBtn/VOverflowBtn.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VOverflowBtn.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete'\nimport VTextField from '../VTextField/VTextField'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n\n  props: {\n    editable: Boolean,\n    segmented: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable,\n      }\n    },\n    isAnyValueAllowed (): boolean {\n      return this.editable ||\n        VAutocomplete.options.computed.isAnyValueAllowed.call(this)\n    },\n    isSingle (): true {\n      return true\n    },\n    computedItems (): object[] {\n      return this.segmented ? this.allItems : this.filteredItems\n    },\n  },\n\n  methods: {\n    genSelections () {\n      return this.editable\n        ? VAutocomplete.options.methods.genSelections.call(this)\n        : VSelect.options.methods.genSelections.call(this) // Override v-autocomplete's override\n    },\n    genCommaSelection (item: any, index: number, last: boolean) {\n      return this.segmented\n        ? this.genSegmentedBtn(item)\n        : VSelect.options.methods.genCommaSelection.call(this, item, index, last)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.domProps!.value = this.editable ? this.internalSearch : ''\n      input.data.attrs!.readonly = !this.isAnyValueAllowed\n\n      return input\n    },\n    genLabel () {\n      if (this.editable && this.isFocused) return null\n\n      const label = VTextField.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label.data = label.data || {}\n\n      // Reset previously set styles from parent\n      label.data.style = {}\n\n      return label\n    },\n    genSegmentedBtn (item: any) {\n      const itemValue = this.getValue(item)\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \\'segmented\\' prop without a selection slot, items must contain both a text and callback property', this)\n        return null\n      }\n\n      return this.$createElement(VBtn, {\n        props: { text: true },\n        on: {\n          click (e: Event) {\n            e.stopPropagation()\n            itemObj.callback(e)\n          },\n        },\n      }, [itemObj.text])\n    },\n    updateValue (val: boolean) {\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}