{"remainingRequest":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js!/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/mixins/binds-attrs/index.js","dependencies":[{"path":"/Users/maxpollard/developer-dashboard/node_modules/vuetify/lib/mixins/binds-attrs/index.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxpollard/developer-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher(property) {\n  return function (val, oldVal) {\n    for (var attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr);\n      }\n    }\n\n    for (var _attr in val) {\n      this.$set(this.$data[property], _attr, val[_attr]);\n    }\n  };\n}\n\nexport default Vue.extend({\n  data: function data() {\n    return {\n      attrs$: {},\n      listeners$: {}\n    };\n  },\n  created: function created() {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), {\n      immediate: true\n    });\n    this.$watch('$listeners', makeWatcher('listeners$'), {\n      immediate: true\n    });\n  }\n});",{"version":3,"sources":["../../../src/mixins/binds-attrs/index.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAEA;;;;;AAKA,SAAA,WAAA,CAAA,QAAA,EAAsC;AACpC,SAAO,UAAA,GAAA,EAAA,MAAA,EAAgC;AACrC,SAAK,IAAL,IAAA,IAAA,MAAA,EAA2B;AACzB,UAAI,CAAC,MAAM,CAAN,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAL,IAAK,CAAL,EAAsD;AACpD,aAAA,OAAA,CAAa,KAAA,KAAA,CAAb,QAAa,CAAb,EAAA,IAAA;AACD;AACF;;AACD,SAAK,IAAL,KAAA,IAAA,GAAA,EAAwB;AACtB,WAAA,IAAA,CAAU,KAAA,KAAA,CAAV,QAAU,CAAV,EAAA,KAAA,EAAsC,GAAG,CAAzC,KAAyC,CAAzC;AACD;AARH,GAAA;AAUD;;AAED,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,MAAM,EADK,EAAA;AAEX,MAAA,UAAU,EAAE;AAFD,KAAP;AAAA,GADkB;AAMxB,EAAA,OANwB,qBAMjB;AACL;AACA;AACA,SAAA,MAAA,CAAA,QAAA,EAAsB,WAAW,CAAjC,QAAiC,CAAjC,EAA6C;AAAE,MAAA,SAAS,EAAE;AAAb,KAA7C;AACA,SAAA,MAAA,CAAA,YAAA,EAA0B,WAAW,CAArC,YAAqC,CAArC,EAAqD;AAAE,MAAA,SAAS,EAAE;AAAb,KAArD;AACD;AAXuB,CAAX,CAAf","sourcesContent":["import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n"],"sourceRoot":""}]}