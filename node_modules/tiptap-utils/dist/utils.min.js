
    /*!
    * tiptap-utils v1.9.0
    * (c) 2020 Scrumpy UG (limited liability)
    * @license MIT
    */


/*!
    * tiptap-utils v1.9.0
    * (c) 2020 Scrumpy UG (limited liability)
    * @license MIT
    */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("prosemirror-utils")):"function"==typeof define&&define.amd?define(["exports","prosemirror-utils"],t):t((e=e||self).tiptapUtils={},e.prosemirrorUtils)}(this,(function(e,t){"use strict";function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(r);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return a(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}e.getMarkAttrs=function(e,t){var r=e.selection,n=r.from,o=r.to,a=[];e.doc.nodesBetween(n,o,(function(e){a=[].concat(i(a),i(e.marks))}));var c=a.find((function(e){return e.type.name===t.name}));return c?c.attrs:{}},e.getMarkRange=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e||!t)return!1;var r=e.parent.childAfter(e.parentOffset);if(!r.node)return!1;var n=r.node.marks.find((function(e){return e.type===t}));if(!n)return!1;for(var o=e.index(),i=e.start()+r.offset,a=o+1,c=i+r.node.nodeSize;o>0&&n.isInSet(e.parent.child(o-1).marks);)o-=1,i-=e.parent.child(o).nodeSize;for(;a<e.parent.childCount&&n.isInSet(e.parent.child(a).marks);)c+=e.parent.child(a).nodeSize,a+=1;return{from:i,to:c}},e.getNodeAttrs=function(e,t){var r=e.selection,n=r.from,o=r.to,a=[];e.doc.nodesBetween(n,o,(function(e){a=[].concat(i(a),[e])}));var c=a.reverse().find((function(e){return e.type.name===t.name}));return c?c.attrs:{}},e.markIsActive=function(e,t){var r=e.selection,n=r.from,o=r.$from,i=r.to;return r.empty?!!t.isInSet(e.storedMarks||o.marks()):!!e.doc.rangeHasMark(n,i,t)},e.nodeEqualsType=function(e){var t=e.types,r=e.node;return Array.isArray(t)&&t.includes(r.type)||r.type===t},e.nodeIsActive=function(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=function(e){return e.type===r},a=t.findSelectedNodeOfType(r)(e.selection)||t.findParentNode(i)(e.selection);return Object.keys(n).length&&a?a.node.hasMarkup(r,o({},a.node.attrs,{},n)):!!a},Object.defineProperty(e,"__esModule",{value:!0})}));